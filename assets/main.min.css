/*! tailwindcss v4.1.7 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: "Source Sans 3", Arial, sans-serif;
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    --color-red-50: rgb(253 232 230);
    --color-red-300: rgb(225 128 113);
    --color-red-400: rgb(208 92 74);
    --color-red-500: rgb(186 58 38);
    --color-orange-50: rgb(255 249 240);
    --color-orange-100: rgb(255 236 204);
    --color-orange-200: rgb(255 215 153);
    --color-orange-300: rgb(255 193 102);
    --color-orange-400: rgb(255 170 51);
    --color-orange-900: rgb(82 51 0);
    --color-green-100: rgb(204 241 214);
    --color-green-200: rgb(153 222 173);
    --color-green-300: rgb(102 199 134);
    --color-green-400: rgb(51 170 95);
    --color-green-800: rgb(0 85 25);
    --color-green-900: rgb(0 59 15);
    --color-blue-50: rgb(230 240 255);
    --color-blue-100: rgb(204 225 255);
    --color-blue-300: rgb(102 165 244);
    --color-blue-400: rgb(51 134 224);
    --color-blue-500: rgb(0 103 197);
    --color-blue-600: rgb(0 86 180);
    --color-blue-700: rgb(0 69 156);
    --color-blue-800: rgb(0 52 125);
    --color-purple-50: rgb(239 236 244);
    --color-purple-500: rgb(99 70 137);
    --color-purple-600: rgb(82 56 116);
    --color-pink-300: oklch(82.3% 0.12 346.018);
    --color-pink-400: oklch(71.8% 0.202 349.761);
    --color-pink-500: oklch(65.6% 0.241 354.308);
    --color-pink-600: oklch(59.2% 0.249 0.584);
    --color-pink-700: oklch(52.5% 0.223 3.958);
    --color-slate-100: oklch(96.8% 0.007 247.896);
    --color-slate-200: oklch(92.9% 0.013 255.508);
    --color-slate-300: oklch(86.9% 0.022 252.894);
    --color-slate-400: oklch(70.4% 0.04 256.788);
    --color-slate-500: oklch(55.4% 0.046 257.417);
    --color-slate-600: oklch(44.6% 0.043 257.281);
    --color-slate-700: oklch(37.2% 0.044 257.287);
    --color-slate-800: oklch(27.9% 0.041 260.031);
    --color-gray-50: rgb(247 247 247);
    --color-gray-100: rgb(241 241 241);
    --color-gray-200: rgb(229 229 229);
    --color-gray-300: rgb(207 207 207);
    --color-gray-400: rgb(176 176 176);
    --color-gray-500: rgb(143 143 143);
    --color-gray-600: rgb(112 112 112);
    --color-gray-700: rgb(89 89 89);
    --color-gray-800: rgb(64 64 64);
    --color-gray-900: rgb(38 38 38);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --breakpoint-md: 1024px;
    --breakpoint-lg: 1200px;
    --breakpoint-xl: 1440px;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-extrabold: 800;
    --font-weight-black: 900;
    --tracking-tight: -0.025em;
    --tracking-normal: 0em;
    --tracking-wide: 0.025em;
    --tracking-wider: 0.05em;
    --tracking-widest: 0.1em;
    --leading-tight: 1.25;
    --leading-snug: 1.375;
    --leading-normal: 1.5;
    --leading-relaxed: 1.625;
    --radius-xs: 0.125rem;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --blur-xs: 2px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --max-width-prose: 68ch;
    --animate-openDrawer: openDrawer 200ms cubic-bezier(0.3, 0.6, 0.25, 1) forwards;
    --animate-dropdown: dropdown 200ms cubic-bezier(0.3, 0.6, 0.25, 1) forwards;
    --animate-fade-in: fade-in 400ms cubic-bezier(0.3, 0.6, 0.25, 1) forwards;
    --color-deepblue-50: rgb(230 241 248);
    --color-deepblue-100: rgb(204 226 240);
    --color-deepblue-200: rgb(153 196 221);
    --color-deepblue-300: rgb(102 163 196);
    --color-deepblue-400: rgb(51 128 165);
    --color-deepblue-500: rgb(0 91 130);
    --color-deepblue-600: rgb(0 80 119);
    --color-deepblue-700: rgb(0 67 103);
    --color-deepblue-800: rgb(0 52 83);
    --color-deepblue-900: rgb(0 36 58);
    --color-lightblue-50: rgb(235 252 255);
    --color-lightblue-200: rgb(181 241 255);
    --color-lightblue-300: rgb(151 230 255);
    --color-limegreen-400: rgb(193 203 51);
    --color-nav-red: rgb(195 0 0);
    --color-brand-purple-deep: #99185E;
    --color-brand-purple-faded: #F0B7D6;
    --color-brand-beige: #FEF5EF;
    --color-transparent: #fff0;
    --flex-basis-side: min(100%, 36rem);
    --flex-basis-main: min(100%, 48rem);
    --max-width-wide: 75rem;
    --text-fluid-14-16: clamp(0.875rem, 0.8333rem + 0.2083vi, 1rem);
    --text-fluid-16-18: clamp(1rem, 0.9583rem + 0.2083vi, 1.125rem);
    --text-fluid-18-20: clamp(1.125rem, 1.0833rem + 0.2083vi, 1.25rem);
    --text-fluid-20-22: clamp(1.25rem, 1.2065rem + 0.2174vi, 1.375rem);
    --text-fluid-22-24: clamp(1.375rem, 1.3333rem + 0.2083vi, 1.5rem);
    --text-fluid-24-28: clamp(1.5rem, 1.4167rem + 0.4167vi, 1.75rem);
    --text-fluid-32-36: clamp(2rem, 1.9167rem + 0.4167vi, 2.25rem);
    --text-fluid-36-48: clamp(2.25rem, 2rem + 1.25vi, 3rem);
    --text-squishy: clamp(2rem, 10vw + 10%, 8rem);
    --spacing-edge: clamp(0.75rem, -1.25rem + 10vi, 10rem);
    --spacing-page: clamp(1rem, -5rem + 15vi, 10rem);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .inset-x-0 {
    inset-inline: calc(var(--spacing) * 0);
  }
  .inset-y-0 {
    inset-block: calc(var(--spacing) * 0);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1\.5 {
    top: calc(var(--spacing) * 1.5);
  }
  .top-4 {
    top: calc(var(--spacing) * 4);
  }
  .top-6 {
    top: calc(var(--spacing) * 6);
  }
  .top-full {
    top: 100%;
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .right-5 {
    right: calc(var(--spacing) * 5);
  }
  .-bottom-1 {
    bottom: calc(var(--spacing) * -1);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-1 {
    bottom: calc(var(--spacing) * 1);
  }
  .bottom-1\/2 {
    bottom: calc(1/2 * 100%);
  }
  .bottom-5 {
    bottom: calc(var(--spacing) * 5);
  }
  .-left-4 {
    left: calc(var(--spacing) * -4);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .isolate {
    isolation: isolate;
  }
  .z-0 {
    z-index: 0;
  }
  .z-10 {
    z-index: 10;
  }
  .z-20 {
    z-index: 20;
  }
  .z-30 {
    z-index: 30;
  }
  .z-40 {
    z-index: 40;
  }
  .z-50 {
    z-index: 50;
  }
  .order-2 {
    order: 2;
  }
  .grid-cols-combi {
    --_container: clamp(0rem, -12.5rem + 31.25vw, 12.5rem);
    --_gap: auto;
    --_prose: minmax(0, 20rem);
    --_edge: var(--spacing-page);
    grid-template-columns: [full-start] var(--_edge) [container-start] var(--_container) var(--_gap) [main-start] var(--_prose) var(--_prose) [main-end] var(--_gap) [toc-start] var(--_container) [container-end toc-end] var(--_edge) [full-end];
    :where(& > *) {
      grid-column: main;
    }
  }
  .col-container {
    grid-column: container;
  }
  .col-full {
    grid-column: full;
  }
  .col-main {
    grid-column: main;
  }
  .col-span-2 {
    grid-column: span 2 / span 2;
  }
  .col-span-8 {
    grid-column: span 8 / span 8;
  }
  .col-toc {
    grid-column: toc;
  }
  .col-wide {
    grid-column: wide;
  }
  .col-start-1 {
    grid-column-start: 1;
  }
  .col-start-2 {
    grid-column-start: 2;
  }
  .col-start-3 {
    grid-column-start: 3;
  }
  .col-end-2 {
    grid-column-end: 2;
  }
  .row-span-2 {
    grid-row: span 2 / span 2;
  }
  .row-start-1 {
    grid-row-start: 1;
  }
  .row-end-1 {
    grid-row-end: 1;
  }
  .float-right {
    float: right;
  }
  .-m-1 {
    margin: calc(var(--spacing) * -1);
  }
  .-mx-1 {
    margin-inline: calc(var(--spacing) * -1);
  }
  .-mx-2 {
    margin-inline: calc(var(--spacing) * -2);
  }
  .-mx-4 {
    margin-inline: calc(var(--spacing) * -4);
  }
  .-mx-px {
    margin-inline: -1px;
  }
  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }
  .mx-6 {
    margin-inline: calc(var(--spacing) * 6);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .mx-edge {
    margin-inline: var(--spacing-edge);
  }
  .-my-1 {
    margin-block: calc(var(--spacing) * -1);
  }
  .my-8 {
    margin-block: calc(var(--spacing) * 8);
  }
  .my-auto {
    margin-block: auto;
  }
  .-mt-2 {
    margin-top: calc(var(--spacing) * -2);
  }
  .-mt-px {
    margin-top: -1px;
  }
  .mt-0 {
    margin-top: calc(var(--spacing) * 0);
  }
  .mt-0\! {
    margin-top: calc(var(--spacing) * 0) !important;
  }
  .mt-0\.5 {
    margin-top: calc(var(--spacing) * 0.5);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-1\! {
    margin-top: calc(var(--spacing) * 1) !important;
  }
  .mt-1\.5 {
    margin-top: calc(var(--spacing) * 1.5);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-2\.5 {
    margin-top: calc(var(--spacing) * 2.5);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-7 {
    margin-top: calc(var(--spacing) * 7);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }
  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }
  .mt-24 {
    margin-top: calc(var(--spacing) * 24);
  }
  .mt-auto {
    margin-top: auto;
  }
  .mt-px {
    margin-top: 1px;
  }
  .-mr-1 {
    margin-right: calc(var(--spacing) * -1);
  }
  .-mr-4 {
    margin-right: calc(var(--spacing) * -4);
  }
  .mr-1 {
    margin-right: calc(var(--spacing) * 1);
  }
  .mr-1\.5 {
    margin-right: calc(var(--spacing) * 1.5);
  }
  .mr-auto {
    margin-right: auto;
  }
  .-mb-0\.5 {
    margin-bottom: calc(var(--spacing) * -0.5);
  }
  .-mb-3 {
    margin-bottom: calc(var(--spacing) * -3);
  }
  .-mb-9 {
    margin-bottom: calc(var(--spacing) * -9);
  }
  .-mb-px {
    margin-bottom: -1px;
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-5 {
    margin-bottom: calc(var(--spacing) * 5);
  }
  .mb-7 {
    margin-bottom: calc(var(--spacing) * 7);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .mb-10 {
    margin-bottom: calc(var(--spacing) * 10);
  }
  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }
  .mb-auto {
    margin-bottom: auto;
  }
  .-ml-0\.5 {
    margin-left: calc(var(--spacing) * -0.5);
  }
  .-ml-1 {
    margin-left: calc(var(--spacing) * -1);
  }
  .-ml-1\.5 {
    margin-left: calc(var(--spacing) * -1.5);
  }
  .-ml-3\.5 {
    margin-left: calc(var(--spacing) * -3.5);
  }
  .-ml-5 {
    margin-left: calc(var(--spacing) * -5);
  }
  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }
  .ml-1\.5 {
    margin-left: calc(var(--spacing) * 1.5);
  }
  .ml-5 {
    margin-left: calc(var(--spacing) * 5);
  }
  .ml-6 {
    margin-left: calc(var(--spacing) * 6);
  }
  .ml-7 {
    margin-left: calc(var(--spacing) * 7);
  }
  .ml-8 {
    margin-left: calc(var(--spacing) * 8);
  }
  .ml-auto {
    margin-left: auto;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .inline-grid {
    display: inline-grid;
  }
  .aspect-2\/1 {
    aspect-ratio: 2/1;
  }
  .aspect-3\/1 {
    aspect-ratio: 3/1;
  }
  .aspect-5\/2 {
    aspect-ratio: 5/2;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .h-0 {
    height: calc(var(--spacing) * 0);
  }
  .h-0\.5 {
    height: calc(var(--spacing) * 0.5);
  }
  .h-2 {
    height: calc(var(--spacing) * 2);
  }
  .h-3 {
    height: calc(var(--spacing) * 3);
  }
  .h-3\.5 {
    height: calc(var(--spacing) * 3.5);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-7 {
    height: calc(var(--spacing) * 7);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-\[0\.625ch\] {
    height: 0.625ch;
  }
  .h-\[0\.675ch\] {
    height: 0.675ch;
  }
  .h-\[6ch\] {
    height: 6ch;
  }
  .h-auto {
    height: auto;
  }
  .h-fit {
    height: fit-content;
  }
  .h-full {
    height: 100%;
  }
  .h-px {
    height: 1px;
  }
  .max-h-\[55dvh\] {
    max-height: 55dvh;
  }
  .max-h-\[70svh\] {
    max-height: 70svh;
  }
  .max-h-full {
    max-height: 100%;
  }
  .min-h-8 {
    min-height: calc(var(--spacing) * 8);
  }
  .min-h-19 {
    min-height: calc(var(--spacing) * 19);
  }
  .min-h-20 {
    min-height: calc(var(--spacing) * 20);
  }
  .min-h-\[20vh\] {
    min-height: 20vh;
  }
  .min-h-\[61vh\] {
    min-height: 61vh;
  }
  .min-h-\[70vh\] {
    min-height: 70vh;
  }
  .min-h-\[72vh\] {
    min-height: 72vh;
  }
  .min-h-\[92vh\] {
    min-height: 92vh;
  }
  .min-h-full {
    min-height: 100%;
  }
  .w-1\/4 {
    width: calc(1/4 * 100%);
  }
  .w-2 {
    width: calc(var(--spacing) * 2);
  }
  .w-2\/5 {
    width: calc(2/5 * 100%);
  }
  .w-3\.5 {
    width: calc(var(--spacing) * 3.5);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-7 {
    width: calc(var(--spacing) * 7);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-10\/12 {
    width: calc(10/12 * 100%);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-24 {
    width: calc(var(--spacing) * 24);
  }
  .w-40 {
    width: calc(var(--spacing) * 40);
  }
  .w-56 {
    width: calc(var(--spacing) * 56);
  }
  .w-\[1\.625em\] {
    width: 1.625em;
  }
  .w-\[6ch\] {
    width: 6ch;
  }
  .w-auto {
    width: auto;
  }
  .w-full {
    width: 100%;
  }
  .w-logo {
    width: clamp(4rem, 3.875rem + 0.625vw, 4.5rem);
  }
  .w-max {
    width: max-content;
  }
  .w-px {
    width: 1px;
  }
  .w-screen {
    width: 100vw;
  }
  .max-w-\(--breakpoint-lg\) {
    max-width: var(--breakpoint-lg);
  }
  .max-w-\(--breakpoint-md\) {
    max-width: var(--breakpoint-md);
  }
  .max-w-\(--breakpoint-xl\) {
    max-width: var(--breakpoint-xl);
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-8\/12 {
    max-width: calc(8/12 * 100%);
  }
  .max-w-16 {
    max-width: calc(var(--spacing) * 16);
  }
  .max-w-20 {
    max-width: calc(var(--spacing) * 20);
  }
  .max-w-24 {
    max-width: calc(var(--spacing) * 24);
  }
  .max-w-52 {
    max-width: calc(var(--spacing) * 52);
  }
  .max-w-\[50ch\] {
    max-width: 50ch;
  }
  .max-w-lg {
    max-width: var(--container-lg);
  }
  .max-w-max {
    max-width: max-content;
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .max-w-prose {
    max-width: var(--max-width-prose);
  }
  .max-w-sm {
    max-width: var(--container-sm);
  }
  .max-w-wide {
    max-width: var(--max-width-wide);
  }
  .max-w-xs {
    max-width: var(--container-xs);
  }
  .min-w-4 {
    min-width: calc(var(--spacing) * 4);
  }
  .min-w-16 {
    min-width: calc(var(--spacing) * 16);
  }
  .min-w-24 {
    min-width: calc(var(--spacing) * 24);
  }
  .min-w-32 {
    min-width: calc(var(--spacing) * 32);
  }
  .flex-1 {
    flex: 1;
  }
  .flex-none {
    flex: none;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .shrink-1 {
    flex-shrink: 1;
  }
  .shrink-5 {
    flex-shrink: 5;
  }
  .basis-main {
    flex-basis: var(--flex-basis-main);
  }
  .basis-side {
    flex-basis: var(--flex-basis-side);
  }
  .origin-center {
    transform-origin: center;
  }
  .-translate-x-0\.5 {
    --tw-translate-x: calc(var(--spacing) * -0.5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-x-1 {
    --tw-translate-x: calc(var(--spacing) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-x-2 {
    --tw-translate-x: calc(var(--spacing) * -2);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-x-\[0\.05em\] {
    --tw-translate-x: calc(0.05em * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-x-\[0\.0625em\] {
    --tw-translate-x: calc(0.0625em * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-x-px {
    --tw-translate-x: -1px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-0\.5 {
    --tw-translate-x: calc(var(--spacing) * 0.5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-6 {
    --tw-translate-x: calc(var(--spacing) * 6);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-px {
    --tw-translate-x: 1px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-0\.5 {
    --tw-translate-y: calc(var(--spacing) * -0.5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-2 {
    --tw-translate-y: calc(var(--spacing) * -2);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-\[0\.25em\] {
    --tw-translate-y: calc(0.25em * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-\[0\.375em\] {
    --tw-translate-y: calc(0.375em * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-px {
    --tw-translate-y: -1px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-0 {
    --tw-translate-y: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-0\.5 {
    --tw-translate-y: calc(var(--spacing) * 0.5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-1 {
    --tw-translate-y: calc(var(--spacing) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-1\.5 {
    --tw-translate-y: calc(var(--spacing) * 1.5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-1\/2 {
    --tw-translate-y: calc(1/2 * 100%);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-8 {
    --tw-translate-y: calc(var(--spacing) * 8);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-px {
    --tw-translate-y: 1px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-rotate-45 {
    rotate: calc(45deg * -1);
  }
  .rotate-45 {
    rotate: 45deg;
  }
  .rotate-180 {
    rotate: 180deg;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .animate-dropdown {
    animation: var(--animate-dropdown);
  }
  .animate-fade-in {
    animation: var(--animate-fade-in);
  }
  .animate-openDrawer {
    animation: var(--animate-openDrawer);
  }
  .cursor-default {
    cursor: default;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .scroll-pt-6 {
    scroll-padding-top: calc(var(--spacing) * 6);
  }
  .scroll-pt-16 {
    scroll-padding-top: calc(var(--spacing) * 16);
  }
  .appearance-none {
    appearance: none;
  }
  .columns-\[42ch\] {
    columns: 42ch;
  }
  .break-before-avoid {
    break-before: avoid;
  }
  .break-inside-avoid {
    break-inside: avoid;
  }
  .grid-flow-dense {
    grid-auto-flow: dense;
  }
  .grid-flow-row-dense {
    grid-auto-flow: row dense;
  }
  .auto-rows-min {
    grid-auto-rows: min-content;
  }
  .grid-cols-\[1\.5rem_auto\] {
    grid-template-columns: 1.5rem auto;
  }
  .grid-cols-\[auto_1fr\] {
    grid-template-columns: auto 1fr;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row-reverse {
    flex-direction: row-reverse;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .place-content-start {
    place-content: start;
  }
  .place-items-center {
    place-items: center;
  }
  .content-between {
    align-content: space-between;
  }
  .content-center {
    align-content: center;
  }
  .content-start {
    align-content: flex-start;
  }
  .items-baseline {
    align-items: baseline;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .justify-items-start {
    justify-items: start;
  }
  .gap-0\.5 {
    gap: calc(var(--spacing) * 0.5);
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-2\.5 {
    gap: calc(var(--spacing) * 2.5);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }
  .gap-px {
    gap: 1px;
  }
  .gap-x-0\.5 {
    column-gap: calc(var(--spacing) * 0.5);
  }
  .gap-x-1 {
    column-gap: calc(var(--spacing) * 1);
  }
  .gap-x-2 {
    column-gap: calc(var(--spacing) * 2);
  }
  .gap-x-8 {
    column-gap: calc(var(--spacing) * 8);
  }
  .gap-x-12 {
    column-gap: calc(var(--spacing) * 12);
  }
  .gap-x-16 {
    column-gap: calc(var(--spacing) * 16);
  }
  .gap-x-24 {
    column-gap: calc(var(--spacing) * 24);
  }
  .gap-y-2\.5 {
    row-gap: calc(var(--spacing) * 2.5);
  }
  .gap-y-12 {
    row-gap: calc(var(--spacing) * 12);
  }
  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .divide-slate-300 {
    :where(& > :not(:last-child)) {
      border-color: var(--color-slate-300);
    }
  }
  .self-center {
    align-self: center;
  }
  .self-start {
    align-self: flex-start;
  }
  .self-stretch {
    align-self: stretch;
  }
  .justify-self-end {
    justify-self: flex-end;
  }
  .overflow-clip {
    overflow: clip;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-visible {
    overflow: visible;
  }
  .overflow-x-hidden {
    overflow-x: hidden;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .overflow-y-scroll {
    overflow-y: scroll;
  }
  .overflow-y-visible {
    overflow-y: visible;
  }
  .overscroll-contain {
    overscroll-behavior: contain;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .rounded-xs {
    border-radius: var(--radius-xs);
  }
  .rounded-t-xl {
    border-top-left-radius: var(--radius-xl);
    border-top-right-radius: var(--radius-xl);
  }
  .rounded-l {
    border-top-left-radius: 0.25rem;
    border-bottom-left-radius: 0.25rem;
  }
  .rounded-tl-xl {
    border-top-left-radius: var(--radius-xl);
  }
  .rounded-r {
    border-top-right-radius: 0.25rem;
    border-bottom-right-radius: 0.25rem;
  }
  .rounded-r-2xl {
    border-top-right-radius: var(--radius-2xl);
    border-bottom-right-radius: var(--radius-2xl);
  }
  .rounded-b {
    border-bottom-right-radius: 0.25rem;
    border-bottom-left-radius: 0.25rem;
  }
  .rounded-b-lg {
    border-bottom-right-radius: var(--radius-lg);
    border-bottom-left-radius: var(--radius-lg);
  }
  .rounded-b-xl {
    border-bottom-right-radius: var(--radius-xl);
    border-bottom-left-radius: var(--radius-xl);
  }
  .rounded-bl-none {
    border-bottom-left-radius: 0;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-t-4 {
    border-top-style: var(--tw-border-style);
    border-top-width: 4px;
  }
  .border-t-8 {
    border-top-style: var(--tw-border-style);
    border-top-width: 8px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
  .border-l-2 {
    border-left-style: var(--tw-border-style);
    border-left-width: 2px;
  }
  .border-l-4 {
    border-left-style: var(--tw-border-style);
    border-left-width: 4px;
  }
  .border-black\/10 {
    border-color: color-mix(in srgb, #000 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-black) 10%, transparent);
    }
  }
  .border-blue-400 {
    border-color: var(--color-blue-400);
  }
  .border-blue-500 {
    border-color: var(--color-blue-500);
  }
  .border-deepblue-100 {
    border-color: var(--color-deepblue-100);
  }
  .border-deepblue-200 {
    border-color: var(--color-deepblue-200);
  }
  .border-deepblue-500 {
    border-color: var(--color-deepblue-500);
  }
  .border-gray-100 {
    border-color: var(--color-gray-100);
  }
  .border-gray-200 {
    border-color: var(--color-gray-200);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-gray-400 {
    border-color: var(--color-gray-400);
  }
  .border-gray-600 {
    border-color: var(--color-gray-600);
  }
  .border-lightblue-200 {
    border-color: var(--color-lightblue-200);
  }
  .border-purple-500 {
    border-color: var(--color-purple-500);
  }
  .border-slate-200 {
    border-color: var(--color-slate-200);
  }
  .border-slate-300 {
    border-color: var(--color-slate-300);
  }
  .border-slate-300\/5 {
    border-color: color-mix(in srgb, oklch(86.9% 0.022 252.894) 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-slate-300) 5%, transparent);
    }
  }
  .border-slate-300\/75 {
    border-color: color-mix(in srgb, oklch(86.9% 0.022 252.894) 75%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-slate-300) 75%, transparent);
    }
  }
  .border-slate-400 {
    border-color: var(--color-slate-400);
  }
  .border-slate-600\/20 {
    border-color: color-mix(in srgb, oklch(44.6% 0.043 257.281) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-slate-600) 20%, transparent);
    }
  }
  .border-white\/10 {
    border-color: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .bg-\[\#E6C7D8\] {
    background-color: #E6C7D8;
  }
  .bg-black\/5 {
    background-color: color-mix(in srgb, #000 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 5%, transparent);
    }
  }
  .bg-black\/20 {
    background-color: color-mix(in srgb, #000 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
  }
  .bg-blue-50 {
    background-color: var(--color-blue-50);
  }
  .bg-blue-100 {
    background-color: var(--color-blue-100);
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .bg-brand-beige {
    background-color: var(--color-brand-beige);
  }
  .bg-brand-purple-faded {
    background-color: var(--color-brand-purple-faded);
  }
  .bg-deepblue-50 {
    background-color: var(--color-deepblue-50);
  }
  .bg-deepblue-100 {
    background-color: var(--color-deepblue-100);
  }
  .bg-deepblue-300 {
    background-color: var(--color-deepblue-300);
  }
  .bg-deepblue-500 {
    background-color: var(--color-deepblue-500);
  }
  .bg-deepblue-600 {
    background-color: var(--color-deepblue-600);
  }
  .bg-deepblue-800 {
    background-color: var(--color-deepblue-800);
  }
  .bg-gray-50 {
    background-color: var(--color-gray-50);
  }
  .bg-gray-50\/50 {
    background-color: color-mix(in srgb, rgb(247 247 247) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-50) 50%, transparent);
    }
  }
  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .bg-gray-400\/40 {
    background-color: color-mix(in srgb, rgb(176 176 176) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-400) 40%, transparent);
    }
  }
  .bg-gray-400\/50 {
    background-color: color-mix(in srgb, rgb(176 176 176) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-400) 50%, transparent);
    }
  }
  .bg-green-100 {
    background-color: var(--color-green-100);
  }
  .bg-green-200 {
    background-color: var(--color-green-200);
  }
  .bg-green-300 {
    background-color: var(--color-green-300);
  }
  .bg-green-400 {
    background-color: var(--color-green-400);
  }
  .bg-lightblue-50 {
    background-color: var(--color-lightblue-50);
  }
  .bg-lightblue-300 {
    background-color: var(--color-lightblue-300);
  }
  .bg-limegreen-400 {
    background-color: var(--color-limegreen-400);
  }
  .bg-orange-50 {
    background-color: var(--color-orange-50);
  }
  .bg-orange-100 {
    background-color: var(--color-orange-100);
  }
  .bg-orange-200 {
    background-color: var(--color-orange-200);
  }
  .bg-orange-300 {
    background-color: var(--color-orange-300);
  }
  .bg-orange-900 {
    background-color: var(--color-orange-900);
  }
  .bg-pink-400\/60 {
    background-color: color-mix(in srgb, oklch(71.8% 0.202 349.761) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-pink-400) 60%, transparent);
    }
  }
  .bg-pink-500 {
    background-color: var(--color-pink-500);
  }
  .bg-pink-700 {
    background-color: var(--color-pink-700);
  }
  .bg-purple-50 {
    background-color: var(--color-purple-50);
  }
  .bg-red-50 {
    background-color: var(--color-red-50);
  }
  .bg-red-300 {
    background-color: var(--color-red-300);
  }
  .bg-slate-100 {
    background-color: var(--color-slate-100);
  }
  .bg-slate-200 {
    background-color: var(--color-slate-200);
  }
  .bg-slate-300 {
    background-color: var(--color-slate-300);
  }
  .bg-slate-500 {
    background-color: var(--color-slate-500);
  }
  .bg-slate-800 {
    background-color: var(--color-slate-800);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-linear-to-b {
    --tw-gradient-position: to bottom;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to bottom in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-linear-to-t {
    --tw-gradient-position: to top;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to top in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-dotted-x {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='5' height='1' fill='none' viewBox='0 0 5 1'%3E%3Ccircle cx='.5' cy='.5' r='.5' fill='%23555'/%3E%3C/svg%3E");
  }
  .from-slate-100 {
    --tw-gradient-from: var(--color-slate-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-1\.5 {
    padding: calc(var(--spacing) * 1.5);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-2\.5 {
    padding-inline: calc(var(--spacing) * 2.5);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .px-edge {
    padding-inline: var(--spacing-edge);
  }
  .py-0\.5 {
    padding-block: calc(var(--spacing) * 0.5);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-3\.5 {
    padding-block: calc(var(--spacing) * 3.5);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }
  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }
  .py-page {
    padding-block: var(--spacing-page);
  }
  .pt-1 {
    padding-top: calc(var(--spacing) * 1);
  }
  .pt-1\.5 {
    padding-top: calc(var(--spacing) * 1.5);
  }
  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }
  .pt-2\.5 {
    padding-top: calc(var(--spacing) * 2.5);
  }
  .pt-3\.5 {
    padding-top: calc(var(--spacing) * 3.5);
  }
  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }
  .pt-5 {
    padding-top: calc(var(--spacing) * 5);
  }
  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }
  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }
  .pt-10 {
    padding-top: calc(var(--spacing) * 10);
  }
  .pt-12 {
    padding-top: calc(var(--spacing) * 12);
  }
  .pt-16 {
    padding-top: calc(var(--spacing) * 16);
  }
  .pt-24 {
    padding-top: calc(var(--spacing) * 24);
  }
  .pr-0\.5 {
    padding-right: calc(var(--spacing) * 0.5);
  }
  .pr-2 {
    padding-right: calc(var(--spacing) * 2);
  }
  .pr-3 {
    padding-right: calc(var(--spacing) * 3);
  }
  .pr-3\.5 {
    padding-right: calc(var(--spacing) * 3.5);
  }
  .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }
  .pr-5 {
    padding-right: calc(var(--spacing) * 5);
  }
  .pr-6 {
    padding-right: calc(var(--spacing) * 6);
  }
  .pr-8 {
    padding-right: calc(var(--spacing) * 8);
  }
  .pr-12 {
    padding-right: calc(var(--spacing) * 12);
  }
  .pr-16 {
    padding-right: calc(var(--spacing) * 16);
  }
  .pr-24 {
    padding-right: calc(var(--spacing) * 24);
  }
  .pr-28 {
    padding-right: calc(var(--spacing) * 28);
  }
  .pb-1 {
    padding-bottom: calc(var(--spacing) * 1);
  }
  .pb-1\.5 {
    padding-bottom: calc(var(--spacing) * 1.5);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pb-2\.5 {
    padding-bottom: calc(var(--spacing) * 2.5);
  }
  .pb-3 {
    padding-bottom: calc(var(--spacing) * 3);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .pb-5 {
    padding-bottom: calc(var(--spacing) * 5);
  }
  .pb-6 {
    padding-bottom: calc(var(--spacing) * 6);
  }
  .pb-8 {
    padding-bottom: calc(var(--spacing) * 8);
  }
  .pb-10 {
    padding-bottom: calc(var(--spacing) * 10);
  }
  .pb-12 {
    padding-bottom: calc(var(--spacing) * 12);
  }
  .pb-16 {
    padding-bottom: calc(var(--spacing) * 16);
  }
  .pb-20 {
    padding-bottom: calc(var(--spacing) * 20);
  }
  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }
  .pl-2\.5 {
    padding-left: calc(var(--spacing) * 2.5);
  }
  .pl-3 {
    padding-left: calc(var(--spacing) * 3);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .pl-5 {
    padding-left: calc(var(--spacing) * 5);
  }
  .pl-6 {
    padding-left: calc(var(--spacing) * 6);
  }
  .pl-7 {
    padding-left: calc(var(--spacing) * 7);
  }
  .pl-8 {
    padding-left: calc(var(--spacing) * 8);
  }
  .pl-10 {
    padding-left: calc(var(--spacing) * 10);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .text-right {
    text-align: right;
  }
  .font-mono {
    font-family: var(--font-mono);
  }
  .font-sans {
    font-family: var(--font-sans);
  }
  .text-\[20em\]\/\[0\.8\] {
    font-size: 20em;
    line-height: 0.8;
  }
  .text-\[360px\]\/\[0\.8\] {
    font-size: 360px;
    line-height: 0.8;
  }
  .text-fluid-16-18\/normal {
    font-size: var(--text-fluid-16-18);
    line-height: var(--leading-normal);
  }
  .text-fluid-16-18\/snug {
    font-size: var(--text-fluid-16-18);
    line-height: var(--leading-snug);
  }
  .text-fluid-18-20\/snug {
    font-size: var(--text-fluid-18-20);
    line-height: var(--leading-snug);
  }
  .text-fluid-20-22\/normal {
    font-size: var(--text-fluid-20-22);
    line-height: var(--leading-normal);
  }
  .text-fluid-20-22\/snug {
    font-size: var(--text-fluid-20-22);
    line-height: var(--leading-snug);
  }
  .text-fluid-20-22\/tight {
    font-size: var(--text-fluid-20-22);
    line-height: var(--leading-tight);
  }
  .text-fluid-22-24\/snug {
    font-size: var(--text-fluid-22-24);
    line-height: var(--leading-snug);
  }
  .text-fluid-22-24\/tight {
    font-size: var(--text-fluid-22-24);
    line-height: var(--leading-tight);
  }
  .text-fluid-32-36\/snug {
    font-size: var(--text-fluid-32-36);
    line-height: var(--leading-snug);
  }
  .text-fluid-32-36\/tight {
    font-size: var(--text-fluid-32-36);
    line-height: var(--leading-tight);
  }
  .text-fluid-36-48\/tight {
    font-size: var(--text-fluid-36-48);
    line-height: var(--leading-tight);
  }
  .text-fluid-14-16 {
    font-size: var(--text-fluid-14-16);
  }
  .text-fluid-16-18 {
    font-size: var(--text-fluid-16-18);
  }
  .text-fluid-18-20 {
    font-size: var(--text-fluid-18-20);
  }
  .text-fluid-20-22 {
    font-size: var(--text-fluid-20-22);
  }
  .text-fluid-22-24 {
    font-size: var(--text-fluid-22-24);
  }
  .text-fluid-24-28 {
    font-size: var(--text-fluid-24-28);
  }
  .text-fluid-32-36 {
    font-size: var(--text-fluid-32-36);
  }
  .text-squishy {
    font-size: var(--text-squishy);
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .leading-normal {
    --tw-leading: var(--leading-normal);
    line-height: var(--leading-normal);
  }
  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }
  .leading-snug {
    --tw-leading: var(--leading-snug);
    line-height: var(--leading-snug);
  }
  .leading-tight {
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
  }
  .font-\[375\] {
    --tw-font-weight: 375;
    font-weight: 375;
  }
  .font-black {
    --tw-font-weight: var(--font-weight-black);
    font-weight: var(--font-weight-black);
  }
  .font-extrabold {
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-normal {
    --tw-tracking: var(--tracking-normal);
    letter-spacing: var(--tracking-normal);
  }
  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  .tracking-wide {
    --tw-tracking: var(--tracking-wide);
    letter-spacing: var(--tracking-wide);
  }
  .tracking-wider {
    --tw-tracking: var(--tracking-wider);
    letter-spacing: var(--tracking-wider);
  }
  .tracking-widest {
    --tw-tracking: var(--tracking-widest);
    letter-spacing: var(--tracking-widest);
  }
  .text-balance {
    text-wrap: balance;
  }
  .text-pretty {
    text-wrap: pretty;
  }
  .text-black {
    color: var(--color-black);
  }
  .text-blue-500 {
    color: var(--color-blue-500);
  }
  .text-blue-600 {
    color: var(--color-blue-600);
  }
  .text-blue-700 {
    color: var(--color-blue-700);
  }
  .text-brand-purple-deep {
    color: var(--color-brand-purple-deep);
  }
  .text-deepblue-300 {
    color: var(--color-deepblue-300);
  }
  .text-deepblue-400 {
    color: var(--color-deepblue-400);
  }
  .text-deepblue-600 {
    color: var(--color-deepblue-600);
  }
  .text-deepblue-800 {
    color: var(--color-deepblue-800);
  }
  .text-gray-50 {
    color: var(--color-gray-50);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-gray-700\/5 {
    color: color-mix(in srgb, rgb(89 89 89) 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-gray-700) 5%, transparent);
    }
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-gray-900 {
    color: var(--color-gray-900);
  }
  .text-gray-900\/40 {
    color: color-mix(in srgb, rgb(38 38 38) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-gray-900) 40%, transparent);
    }
  }
  .text-gray-900\/80 {
    color: color-mix(in srgb, rgb(38 38 38) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-gray-900) 80%, transparent);
    }
  }
  .text-green-400 {
    color: var(--color-green-400);
  }
  .text-green-800 {
    color: var(--color-green-800);
  }
  .text-green-900 {
    color: var(--color-green-900);
  }
  .text-nav-red {
    color: var(--color-nav-red);
  }
  .text-orange-200 {
    color: var(--color-orange-200);
  }
  .text-pink-300 {
    color: var(--color-pink-300);
  }
  .text-purple-500 {
    color: var(--color-purple-500);
  }
  .text-purple-600 {
    color: var(--color-purple-600);
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .text-slate-200 {
    color: var(--color-slate-200);
  }
  .text-slate-500 {
    color: var(--color-slate-500);
  }
  .text-slate-700 {
    color: var(--color-slate-700);
  }
  .text-slate-800 {
    color: var(--color-slate-800);
  }
  .text-transparent {
    color: transparent;
  }
  .text-white {
    color: var(--color-white);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .no-underline {
    text-decoration-line: none;
  }
  .underline {
    text-decoration-line: underline;
  }
  .decoration-blue-300\/70 {
    text-decoration-color: color-mix(in srgb, rgb(102 165 244) 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      text-decoration-color: color-mix(in oklab, var(--color-blue-300) 70%, transparent);
    }
  }
  .decoration-blue-400 {
    text-decoration-color: var(--color-blue-400);
  }
  .decoration-blue-500 {
    text-decoration-color: var(--color-blue-500);
  }
  .decoration-slate-800\/40 {
    text-decoration-color: color-mix(in srgb, oklch(27.9% 0.041 260.031) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      text-decoration-color: color-mix(in oklab, var(--color-slate-800) 40%, transparent);
    }
  }
  .decoration-from-font {
    text-decoration-thickness: from-font;
  }
  .underline-offset-3 {
    text-underline-offset: 3px;
  }
  .underline-offset-4 {
    text-underline-offset: 4px;
  }
  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-1 {
    opacity: 1%;
  }
  .opacity-10 {
    opacity: 10%;
  }
  .opacity-50 {
    opacity: 50%;
  }
  .opacity-60 {
    opacity: 60%;
  }
  .opacity-70 {
    opacity: 70%;
  }
  .opacity-75 {
    opacity: 75%;
  }
  .opacity-80 {
    opacity: 80%;
  }
  .opacity-85 {
    opacity: 85%;
  }
  .opacity-90 {
    opacity: 90%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .mix-blend-multiply {
    mix-blend-mode: multiply;
  }
  .shadow-2xl {
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-border {
    --tw-shadow: 0 -1px 0 inset var(--tw-shadow-color, var(--color-gray-600/10));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-inner {
    --tw-shadow: inset 0 2px 4px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-2 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-blue-500 {
    --tw-ring-color: var(--color-blue-500);
  }
  .ring-deepblue-50 {
    --tw-ring-color: var(--color-deepblue-50);
  }
  .ring-gray-300 {
    --tw-ring-color: var(--color-gray-300);
  }
  .ring-slate-300 {
    --tw-ring-color: var(--color-slate-300);
  }
  .ring-white {
    --tw-ring-color: var(--color-white);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur-xs {
    --tw-backdrop-blur: blur(var(--blur-xs));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-75 {
    --tw-duration: 75ms;
    transition-duration: 75ms;
  }
  .duration-100 {
    --tw-duration: 100ms;
    transition-duration: 100ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .duration-900 {
    --tw-duration: 900ms;
    transition-duration: 900ms;
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .border-warning {
    border-image: repeating-linear-gradient(-64deg, var(--color-orange-400), var(--color-orange-400) 10px, var(--color-deepblue-900) 0, var(--color-deepblue-900) 20px) 20;
  }
  .ring-inset {
    --tw-ring-inset: inset;
  }
  .small-caps {
    font-variant-caps: all-small-caps;
  }
  .group-focus-within\:hidden {
    &:is(:where(.group):focus-within *) {
      display: none;
    }
  }
  .group-hover\:translate-x-1 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:scale-110 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .group-hover\:rotate-0 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        rotate: 0deg;
      }
    }
  }
  .group-hover\:bg-blue-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: var(--color-blue-500);
      }
    }
  }
  .group-hover\:bg-deepblue-600 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: var(--color-deepblue-600);
      }
    }
  }
  .group-hover\:bg-white {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: var(--color-white);
      }
    }
  }
  .group-hover\:text-blue-700 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-blue-700);
      }
    }
  }
  .group-hover\:text-white {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .group-hover\:underline {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .group-hover\:decoration-2 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        text-decoration-thickness: 2px;
      }
    }
  }
  .group-aria-expanded\:rotate-180 {
    &:is(:where(.group)[aria-expanded="true"] *) {
      rotate: 180deg;
    }
  }
  .group-aria-expanded\:text-deepblue-600 {
    &:is(:where(.group)[aria-expanded="true"] *) {
      color: var(--color-deepblue-600);
    }
  }
  .peer-checked\:bg-blue-500 {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-blue-500);
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:inset-0 {
    &::before {
      content: var(--tw-content);
      inset: calc(var(--spacing) * 0);
    }
  }
  .after\:absolute {
    &::after {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .after\:inset-0 {
    &::after {
      content: var(--tw-content);
      inset: calc(var(--spacing) * 0);
    }
  }
  .after\:z-10 {
    &::after {
      content: var(--tw-content);
      z-index: 10;
    }
  }
  .first\:border-t-0 {
    &:first-child {
      border-top-style: var(--tw-border-style);
      border-top-width: 0px;
    }
  }
  .focus-within\:z-10 {
    &:focus-within {
      z-index: 10;
    }
  }
  .focus-within\:z-20 {
    &:focus-within {
      z-index: 20;
    }
  }
  .focus-within\:rounded-bl-lg {
    &:focus-within {
      border-bottom-left-radius: var(--radius-lg);
    }
  }
  .focus-within\:ring {
    &:focus-within {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-within\:ring-blue-800 {
    &:focus-within {
      --tw-ring-color: var(--color-blue-800);
    }
  }
  .focus-within\:ring-offset-2 {
    &:focus-within {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus-within\:ring-offset-white {
    &:focus-within {
      --tw-ring-offset-color: var(--color-white);
    }
  }
  .hover\:rotate-0 {
    &:hover {
      @media (hover: hover) {
        rotate: 0deg;
      }
    }
  }
  .hover\:rounded {
    &:hover {
      @media (hover: hover) {
        border-radius: 0.25rem;
      }
    }
  }
  .hover\:border-blue-500 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-blue-500);
      }
    }
  }
  .hover\:border-deepblue-400\/50 {
    &:hover {
      @media (hover: hover) {
        border-color: color-mix(in srgb, rgb(51 128 165) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-deepblue-400) 50%, transparent);
        }
      }
    }
  }
  .hover\:border-deepblue-600 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-deepblue-600);
      }
    }
  }
  .hover\:border-gray-400 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-gray-400);
      }
    }
  }
  .hover\:border-gray-600 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-gray-600);
      }
    }
  }
  .hover\:bg-blue-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-50);
      }
    }
  }
  .hover\:bg-blue-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-100);
      }
    }
  }
  .hover\:bg-blue-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-600);
      }
    }
  }
  .hover\:bg-deepblue-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-deepblue-500);
      }
    }
  }
  .hover\:bg-deepblue-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-deepblue-600);
      }
    }
  }
  .hover\:bg-gray-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-50);
      }
    }
  }
  .hover\:bg-gray-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
  }
  .hover\:bg-pink-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-pink-600);
      }
    }
  }
  .hover\:bg-slate-200\/50 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(92.9% 0.013 255.508) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-slate-200) 50%, transparent);
        }
      }
    }
  }
  .hover\:bg-slate-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-700);
      }
    }
  }
  .hover\:text-blue-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-600);
      }
    }
  }
  .hover\:text-blue-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-700);
      }
    }
  }
  .hover\:text-deepblue-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-deepblue-600);
      }
    }
  }
  .hover\:text-orange-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-orange-200);
      }
    }
  }
  .hover\:text-pink-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-pink-300);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .hover\:decoration-2 {
    &:hover {
      @media (hover: hover) {
        text-decoration-thickness: 2px;
      }
    }
  }
  .hover\:shadow-lg {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .focus\:z-10 {
    &:focus {
      z-index: 10;
    }
  }
  .focus\:rounded {
    &:focus {
      border-radius: 0.25rem;
    }
  }
  .focus\:bg-blue-600 {
    &:focus {
      background-color: var(--color-blue-600);
    }
  }
  .focus\:bg-deepblue-800 {
    &:focus {
      background-color: var(--color-deepblue-800);
    }
  }
  .focus\:ring {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-blue-800 {
    &:focus {
      --tw-ring-color: var(--color-blue-800);
    }
  }
  .focus\:ring-deepblue-800 {
    &:focus {
      --tw-ring-color: var(--color-deepblue-800);
    }
  }
  .focus\:ring-offset-1 {
    &:focus {
      --tw-ring-offset-width: 1px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus\:ring-offset-white {
    &:focus {
      --tw-ring-offset-color: var(--color-white);
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .focus-visible\:z-10 {
    &:focus-visible {
      z-index: 10;
    }
  }
  .focus-visible\:rounded {
    &:focus-visible {
      border-radius: 0.25rem;
    }
  }
  .focus-visible\:bg-white {
    &:focus-visible {
      background-color: var(--color-white);
    }
  }
  .focus-visible\:ring {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-visible\:ring-2 {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-visible\:ring-blue-600 {
    &:focus-visible {
      --tw-ring-color: var(--color-blue-600);
    }
  }
  .focus-visible\:ring-blue-800 {
    &:focus-visible {
      --tw-ring-color: var(--color-blue-800);
    }
  }
  .focus-visible\:ring-offset-1 {
    &:focus-visible {
      --tw-ring-offset-width: 1px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus-visible\:ring-offset-2 {
    &:focus-visible {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus-visible\:ring-offset-white {
    &:focus-visible {
      --tw-ring-offset-color: var(--color-white);
    }
  }
  .focus-visible\:outline-none {
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .focus-visible\:ring-inset {
    &:focus-visible {
      --tw-ring-inset: inset;
    }
  }
  .has-\[a\:active\]\:bg-blue-50 {
    &:has(*:is(a:active)) {
      background-color: var(--color-blue-50);
    }
  }
  .has-\[a\:focus-visible\]\:ring {
    &:has(*:is(a:focus-visible)) {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .has-\[a\:focus-visible\]\:ring-blue-600 {
    &:has(*:is(a:focus-visible)) {
      --tw-ring-color: var(--color-blue-600);
    }
  }
  .has-\[a\:hover\]\:bg-blue-50 {
    &:has(*:is(a:hover)) {
      background-color: var(--color-blue-50);
    }
  }
  .has-\[a\:hover\]\:bg-blue-500 {
    &:has(*:is(a:hover)) {
      background-color: var(--color-blue-500);
    }
  }
  .has-\[a\:hover\]\:bg-gray-100 {
    &:has(*:is(a:hover)) {
      background-color: var(--color-gray-100);
    }
  }
  .has-\[a\:hover\]\:bg-slate-200 {
    &:has(*:is(a:hover)) {
      background-color: var(--color-slate-200);
    }
  }
  .has-\[a\:hover\]\:text-white {
    &:has(*:is(a:hover)) {
      color: var(--color-white);
    }
  }
  .has-\[a\:hover\]\:ring {
    &:has(*:is(a:hover)) {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .has-\[a\:hover\]\:ring-deepblue-300 {
    &:has(*:is(a:hover)) {
      --tw-ring-color: var(--color-deepblue-300);
    }
  }
  .has-\[a\:hover\]\:drop-shadow {
    &:has(*:is(a:hover)) {
      --tw-drop-shadow-size: drop-shadow(0 1px 2px var(--tw-drop-shadow-color, rgb(0 0 0 / 0.1))) drop-shadow(0 1px 1px var(--tw-drop-shadow-color, rgb(0 0 0 / 0.06)));
      --tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow( 0 1px 1px rgb(0 0 0 / 0.06));
      filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    }
  }
  .motion-safe\:scroll-smooth {
    @media (prefers-reduced-motion: no-preference) {
      scroll-behavior: smooth;
    }
  }
  .xs\:col-span-1 {
    @media (width >= 512px) {
      grid-column: span 1 / span 1;
    }
  }
  .xs\:col-start-1 {
    @media (width >= 512px) {
      grid-column-start: 1;
    }
  }
  .xs\:-ml-2 {
    @media (width >= 512px) {
      margin-left: calc(var(--spacing) * -2);
    }
  }
  .xs\:flex {
    @media (width >= 512px) {
      display: flex;
    }
  }
  .xs\:w-11\/12 {
    @media (width >= 512px) {
      width: calc(11/12 * 100%);
    }
  }
  .xs\:grid-cols-2 {
    @media (width >= 512px) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .xs\:flex-row {
    @media (width >= 512px) {
      flex-direction: row;
    }
  }
  .xs\:items-start {
    @media (width >= 512px) {
      align-items: flex-start;
    }
  }
  .xs\:gap-2 {
    @media (width >= 512px) {
      gap: calc(var(--spacing) * 2);
    }
  }
  .xs\:gap-6 {
    @media (width >= 512px) {
      gap: calc(var(--spacing) * 6);
    }
  }
  .xs\:p-8 {
    @media (width >= 512px) {
      padding: calc(var(--spacing) * 8);
    }
  }
  .xs\:py-2 {
    @media (width >= 512px) {
      padding-block: calc(var(--spacing) * 2);
    }
  }
  .xs\:pr-3 {
    @media (width >= 512px) {
      padding-right: calc(var(--spacing) * 3);
    }
  }
  .xs\:pl-2\.5 {
    @media (width >= 512px) {
      padding-left: calc(var(--spacing) * 2.5);
    }
  }
  .xs\:text-center {
    @media (width >= 512px) {
      text-align: center;
    }
  }
  .xs\:text-fluid-18-20 {
    @media (width >= 512px) {
      font-size: var(--text-fluid-18-20);
    }
  }
  .xs\:text-fluid-20-22 {
    @media (width >= 512px) {
      font-size: var(--text-fluid-20-22);
    }
  }
  .sm\:not-sr-only {
    @media (width >= 768px) {
      position: static;
      width: auto;
      height: auto;
      padding: 0;
      margin: 0;
      overflow: visible;
      clip: auto;
      white-space: normal;
    }
  }
  .sm\:col-container {
    @media (width >= 768px) {
      grid-column: container;
    }
  }
  .sm\:col-span-2 {
    @media (width >= 768px) {
      grid-column: span 2 / span 2;
    }
  }
  .sm\:-mx-6 {
    @media (width >= 768px) {
      margin-inline: calc(var(--spacing) * -6);
    }
  }
  .sm\:mx-0 {
    @media (width >= 768px) {
      margin-inline: calc(var(--spacing) * 0);
    }
  }
  .sm\:mx-6 {
    @media (width >= 768px) {
      margin-inline: calc(var(--spacing) * 6);
    }
  }
  .sm\:mt-4 {
    @media (width >= 768px) {
      margin-top: calc(var(--spacing) * 4);
    }
  }
  .sm\:flex {
    @media (width >= 768px) {
      display: flex;
    }
  }
  .sm\:hidden {
    @media (width >= 768px) {
      display: none;
    }
  }
  .sm\:inline-block {
    @media (width >= 768px) {
      display: inline-block;
    }
  }
  .sm\:h-6 {
    @media (width >= 768px) {
      height: calc(var(--spacing) * 6);
    }
  }
  .sm\:h-7 {
    @media (width >= 768px) {
      height: calc(var(--spacing) * 7);
    }
  }
  .sm\:h-16 {
    @media (width >= 768px) {
      height: calc(var(--spacing) * 16);
    }
  }
  .sm\:h-20 {
    @media (width >= 768px) {
      height: calc(var(--spacing) * 20);
    }
  }
  .sm\:h-24 {
    @media (width >= 768px) {
      height: calc(var(--spacing) * 24);
    }
  }
  .sm\:w-6 {
    @media (width >= 768px) {
      width: calc(var(--spacing) * 6);
    }
  }
  .sm\:w-7 {
    @media (width >= 768px) {
      width: calc(var(--spacing) * 7);
    }
  }
  .sm\:w-16 {
    @media (width >= 768px) {
      width: calc(var(--spacing) * 16);
    }
  }
  .sm\:w-20 {
    @media (width >= 768px) {
      width: calc(var(--spacing) * 20);
    }
  }
  .sm\:w-24 {
    @media (width >= 768px) {
      width: calc(var(--spacing) * 24);
    }
  }
  .sm\:w-full {
    @media (width >= 768px) {
      width: 100%;
    }
  }
  .sm\:max-w-24 {
    @media (width >= 768px) {
      max-width: calc(var(--spacing) * 24);
    }
  }
  .sm\:max-w-lg {
    @media (width >= 768px) {
      max-width: var(--container-lg);
    }
  }
  .sm\:max-w-xl {
    @media (width >= 768px) {
      max-width: var(--container-xl);
    }
  }
  .sm\:columns-2 {
    @media (width >= 768px) {
      columns: 2;
    }
  }
  .sm\:grid-flow-col {
    @media (width >= 768px) {
      grid-auto-flow: column;
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 768px) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:grid-cols-\[auto_auto_1fr\] {
    @media (width >= 768px) {
      grid-template-columns: auto auto 1fr;
    }
  }
  .sm\:flex-row {
    @media (width >= 768px) {
      flex-direction: row;
    }
  }
  .sm\:flex-row-reverse {
    @media (width >= 768px) {
      flex-direction: row-reverse;
    }
  }
  .sm\:justify-center {
    @media (width >= 768px) {
      justify-content: center;
    }
  }
  .sm\:gap-2 {
    @media (width >= 768px) {
      gap: calc(var(--spacing) * 2);
    }
  }
  .sm\:gap-4 {
    @media (width >= 768px) {
      gap: calc(var(--spacing) * 4);
    }
  }
  .sm\:gap-6 {
    @media (width >= 768px) {
      gap: calc(var(--spacing) * 6);
    }
  }
  .sm\:gap-x-6 {
    @media (width >= 768px) {
      column-gap: calc(var(--spacing) * 6);
    }
  }
  .sm\:gap-x-16 {
    @media (width >= 768px) {
      column-gap: calc(var(--spacing) * 16);
    }
  }
  .sm\:self-end {
    @media (width >= 768px) {
      align-self: flex-end;
    }
  }
  .sm\:justify-self-end {
    @media (width >= 768px) {
      justify-self: flex-end;
    }
  }
  .sm\:rounded-lg {
    @media (width >= 768px) {
      border-radius: var(--radius-lg);
    }
  }
  .sm\:p-6 {
    @media (width >= 768px) {
      padding: calc(var(--spacing) * 6);
    }
  }
  .sm\:px-0 {
    @media (width >= 768px) {
      padding-inline: calc(var(--spacing) * 0);
    }
  }
  .sm\:px-6 {
    @media (width >= 768px) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .sm\:px-8 {
    @media (width >= 768px) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .sm\:px-20 {
    @media (width >= 768px) {
      padding-inline: calc(var(--spacing) * 20);
    }
  }
  .sm\:py-4 {
    @media (width >= 768px) {
      padding-block: calc(var(--spacing) * 4);
    }
  }
  .sm\:py-6 {
    @media (width >= 768px) {
      padding-block: calc(var(--spacing) * 6);
    }
  }
  .sm\:pt-8 {
    @media (width >= 768px) {
      padding-top: calc(var(--spacing) * 8);
    }
  }
  .sm\:pr-0 {
    @media (width >= 768px) {
      padding-right: calc(var(--spacing) * 0);
    }
  }
  .sm\:pr-8 {
    @media (width >= 768px) {
      padding-right: calc(var(--spacing) * 8);
    }
  }
  .sm\:pr-36 {
    @media (width >= 768px) {
      padding-right: calc(var(--spacing) * 36);
    }
  }
  .sm\:pb-10 {
    @media (width >= 768px) {
      padding-bottom: calc(var(--spacing) * 10);
    }
  }
  .sm\:pl-6 {
    @media (width >= 768px) {
      padding-left: calc(var(--spacing) * 6);
    }
  }
  .sm\:pl-20 {
    @media (width >= 768px) {
      padding-left: calc(var(--spacing) * 20);
    }
  }
  .sm\:text-5xl {
    @media (width >= 768px) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .sm\:text-fluid-18-20 {
    @media (width >= 768px) {
      font-size: var(--text-fluid-18-20);
    }
  }
  .sm\:leading-snug {
    @media (width >= 768px) {
      --tw-leading: var(--leading-snug);
      line-height: var(--leading-snug);
    }
  }
  .md\:absolute {
    @media (width >= 1024px) {
      position: absolute;
    }
  }
  .md\:relative {
    @media (width >= 1024px) {
      position: relative;
    }
  }
  .md\:static {
    @media (width >= 1024px) {
      position: static;
    }
  }
  .md\:sticky {
    @media (width >= 1024px) {
      position: sticky;
    }
  }
  .md\:right-0 {
    @media (width >= 1024px) {
      right: calc(var(--spacing) * 0);
    }
  }
  .md\:right-full {
    @media (width >= 1024px) {
      right: 100%;
    }
  }
  .md\:left-auto {
    @media (width >= 1024px) {
      left: auto;
    }
  }
  .md\:order-1 {
    @media (width >= 1024px) {
      order: 1;
    }
  }
  .md\:order-2 {
    @media (width >= 1024px) {
      order: 2;
    }
  }
  .md\:col-pictogram {
    @media (width >= 1024px) {
      grid-column: pictogram;
    }
  }
  .md\:col-span-1 {
    @media (width >= 1024px) {
      grid-column: span 1 / span 1;
    }
  }
  .md\:col-span-4 {
    @media (width >= 1024px) {
      grid-column: span 4 / span 4;
    }
  }
  .md\:col-span-6 {
    @media (width >= 1024px) {
      grid-column: span 6 / span 6;
    }
  }
  .md\:col-span-8 {
    @media (width >= 1024px) {
      grid-column: span 8 / span 8;
    }
  }
  .md\:col-wide {
    @media (width >= 1024px) {
      grid-column: wide;
    }
  }
  .md\:col-start-1 {
    @media (width >= 1024px) {
      grid-column-start: 1;
    }
  }
  .md\:col-start-2 {
    @media (width >= 1024px) {
      grid-column-start: 2;
    }
  }
  .md\:col-start-9 {
    @media (width >= 1024px) {
      grid-column-start: 9;
    }
  }
  .md\:col-start-\[main\] {
    @media (width >= 1024px) {
      grid-column-start: main;
    }
  }
  .md\:col-end-9 {
    @media (width >= 1024px) {
      grid-column-end: 9;
    }
  }
  .md\:col-end-\[container\] {
    @media (width >= 1024px) {
      grid-column-end: container;
    }
  }
  .md\:row-span-2 {
    @media (width >= 1024px) {
      grid-row: span 2 / span 2;
    }
  }
  .md\:row-start-1 {
    @media (width >= 1024px) {
      grid-row-start: 1;
    }
  }
  .md\:row-start-2 {
    @media (width >= 1024px) {
      grid-row-start: 2;
    }
  }
  .md\:float-none {
    @media (width >= 1024px) {
      float: none;
    }
  }
  .md\:mx-0 {
    @media (width >= 1024px) {
      margin-inline: calc(var(--spacing) * 0);
    }
  }
  .md\:mt-5 {
    @media (width >= 1024px) {
      margin-top: calc(var(--spacing) * 5);
    }
  }
  .md\:mt-9 {
    @media (width >= 1024px) {
      margin-top: calc(var(--spacing) * 9);
    }
  }
  .md\:mt-12 {
    @media (width >= 1024px) {
      margin-top: calc(var(--spacing) * 12);
    }
  }
  .md\:mt-20 {
    @media (width >= 1024px) {
      margin-top: calc(var(--spacing) * 20);
    }
  }
  .md\:mr-8 {
    @media (width >= 1024px) {
      margin-right: calc(var(--spacing) * 8);
    }
  }
  .md\:mr-auto {
    @media (width >= 1024px) {
      margin-right: auto;
    }
  }
  .md\:mb-0 {
    @media (width >= 1024px) {
      margin-bottom: calc(var(--spacing) * 0);
    }
  }
  .md\:-ml-32 {
    @media (width >= 1024px) {
      margin-left: calc(var(--spacing) * -32);
    }
  }
  .md\:ml-0 {
    @media (width >= 1024px) {
      margin-left: calc(var(--spacing) * 0);
    }
  }
  .md\:ml-2 {
    @media (width >= 1024px) {
      margin-left: calc(var(--spacing) * 2);
    }
  }
  .md\:block {
    @media (width >= 1024px) {
      display: block;
    }
  }
  .md\:flex {
    @media (width >= 1024px) {
      display: flex;
    }
  }
  .md\:grid {
    @media (width >= 1024px) {
      display: grid;
    }
  }
  .md\:hidden {
    @media (width >= 1024px) {
      display: none;
    }
  }
  .md\:max-h-\[92vh\] {
    @media (width >= 1024px) {
      max-height: 92vh;
    }
  }
  .md\:min-h-32 {
    @media (width >= 1024px) {
      min-height: calc(var(--spacing) * 32);
    }
  }
  .md\:w-full {
    @media (width >= 1024px) {
      width: 100%;
    }
  }
  .md\:max-w-none {
    @media (width >= 1024px) {
      max-width: none;
    }
  }
  .md\:columns-3 {
    @media (width >= 1024px) {
      columns: 3;
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 1024px) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 1024px) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-12 {
    @media (width >= 1024px) {
      grid-template-columns: repeat(12, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-\[2\.2fr_0\.8fr\] {
    @media (width >= 1024px) {
      grid-template-columns: 2.2fr 0.8fr;
    }
  }
  .md\:grid-cols-\[2fr_1fr\] {
    @media (width >= 1024px) {
      grid-template-columns: 2fr 1fr;
    }
  }
  .md\:grid-cols-\[6rem_auto\] {
    @media (width >= 1024px) {
      grid-template-columns: 6rem auto;
    }
  }
  .md\:grid-cols-\[8rem_auto\] {
    @media (width >= 1024px) {
      grid-template-columns: 8rem auto;
    }
  }
  .md\:items-center {
    @media (width >= 1024px) {
      align-items: center;
    }
  }
  .md\:gap-5 {
    @media (width >= 1024px) {
      gap: calc(var(--spacing) * 5);
    }
  }
  .md\:gap-8 {
    @media (width >= 1024px) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .md\:gap-x-12 {
    @media (width >= 1024px) {
      column-gap: calc(var(--spacing) * 12);
    }
  }
  .md\:gap-x-16 {
    @media (width >= 1024px) {
      column-gap: calc(var(--spacing) * 16);
    }
  }
  .md\:bg-transparent {
    @media (width >= 1024px) {
      background-color: transparent;
    }
  }
  .md\:p-6 {
    @media (width >= 1024px) {
      padding: calc(var(--spacing) * 6);
    }
  }
  .md\:p-8 {
    @media (width >= 1024px) {
      padding: calc(var(--spacing) * 8);
    }
  }
  .md\:px-6 {
    @media (width >= 1024px) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .md\:px-10 {
    @media (width >= 1024px) {
      padding-inline: calc(var(--spacing) * 10);
    }
  }
  .md\:py-5 {
    @media (width >= 1024px) {
      padding-block: calc(var(--spacing) * 5);
    }
  }
  .md\:py-6 {
    @media (width >= 1024px) {
      padding-block: calc(var(--spacing) * 6);
    }
  }
  .md\:py-12 {
    @media (width >= 1024px) {
      padding-block: calc(var(--spacing) * 12);
    }
  }
  .md\:pt-12 {
    @media (width >= 1024px) {
      padding-top: calc(var(--spacing) * 12);
    }
  }
  .md\:pr-0 {
    @media (width >= 1024px) {
      padding-right: calc(var(--spacing) * 0);
    }
  }
  .md\:pr-20 {
    @media (width >= 1024px) {
      padding-right: calc(var(--spacing) * 20);
    }
  }
  .md\:pb-1 {
    @media (width >= 1024px) {
      padding-bottom: calc(var(--spacing) * 1);
    }
  }
  .md\:pb-12 {
    @media (width >= 1024px) {
      padding-bottom: calc(var(--spacing) * 12);
    }
  }
  .md\:pb-20 {
    @media (width >= 1024px) {
      padding-bottom: calc(var(--spacing) * 20);
    }
  }
  .md\:pl-0 {
    @media (width >= 1024px) {
      padding-left: calc(var(--spacing) * 0);
    }
  }
  .md\:pl-6 {
    @media (width >= 1024px) {
      padding-left: calc(var(--spacing) * 6);
    }
  }
  .md\:text-center {
    @media (width >= 1024px) {
      text-align: center;
    }
  }
  .md\:text-5xl {
    @media (width >= 1024px) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .md\:text-fluid-18-20 {
    @media (width >= 1024px) {
      font-size: var(--text-fluid-18-20);
    }
  }
  .md\:text-fluid-20-22 {
    @media (width >= 1024px) {
      font-size: var(--text-fluid-20-22);
    }
  }
  .md\:text-fluid-22-24 {
    @media (width >= 1024px) {
      font-size: var(--text-fluid-22-24);
    }
  }
  .md\:text-fluid-24-28 {
    @media (width >= 1024px) {
      font-size: var(--text-fluid-24-28);
    }
  }
  .md\:text-fluid-36-48 {
    @media (width >= 1024px) {
      font-size: var(--text-fluid-36-48);
    }
  }
  .md\:leading-none {
    @media (width >= 1024px) {
      --tw-leading: 1;
      line-height: 1;
    }
  }
  .md\:leading-tight {
    @media (width >= 1024px) {
      --tw-leading: var(--leading-tight);
      line-height: var(--leading-tight);
    }
  }
  .md\:shadow-none {
    @media (width >= 1024px) {
      --tw-shadow: 0 0 #0000;
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .md\:odd\:pr-12 {
    @media (width >= 1024px) {
      &:nth-child(odd) {
        padding-right: calc(var(--spacing) * 12);
      }
    }
  }
  .md\:even\:pl-10 {
    @media (width >= 1024px) {
      &:nth-child(even) {
        padding-left: calc(var(--spacing) * 10);
      }
    }
  }
  .lg\:sticky {
    @media (width >= 1200px) {
      position: sticky;
    }
  }
  .lg\:top-3 {
    @media (width >= 1200px) {
      top: calc(var(--spacing) * 3);
    }
  }
  .lg\:top-6 {
    @media (width >= 1200px) {
      top: calc(var(--spacing) * 6);
    }
  }
  .lg\:top-8 {
    @media (width >= 1200px) {
      top: calc(var(--spacing) * 8);
    }
  }
  .lg\:top-12 {
    @media (width >= 1200px) {
      top: calc(var(--spacing) * 12);
    }
  }
  .lg\:order-1 {
    @media (width >= 1200px) {
      order: 1;
    }
  }
  .lg\:col-span-2 {
    @media (width >= 1200px) {
      grid-column: span 2 / span 2;
    }
  }
  .lg\:col-span-3 {
    @media (width >= 1200px) {
      grid-column: span 3 / span 3;
    }
  }
  .lg\:col-span-4 {
    @media (width >= 1200px) {
      grid-column: span 4 / span 4;
    }
  }
  .lg\:col-span-6 {
    @media (width >= 1200px) {
      grid-column: span 6 / span 6;
    }
  }
  .lg\:col-wide {
    @media (width >= 1200px) {
      grid-column: wide;
    }
  }
  .lg\:col-start-1 {
    @media (width >= 1200px) {
      grid-column-start: 1;
    }
  }
  .lg\:col-start-2 {
    @media (width >= 1200px) {
      grid-column-start: 2;
    }
  }
  .lg\:col-start-3 {
    @media (width >= 1200px) {
      grid-column-start: 3;
    }
  }
  .lg\:col-start-9 {
    @media (width >= 1200px) {
      grid-column-start: 9;
    }
  }
  .lg\:col-end-9 {
    @media (width >= 1200px) {
      grid-column-end: 9;
    }
  }
  .lg\:col-end-13 {
    @media (width >= 1200px) {
      grid-column-end: 13;
    }
  }
  .lg\:row-span-2 {
    @media (width >= 1200px) {
      grid-row: span 2 / span 2;
    }
  }
  .lg\:row-span-4 {
    @media (width >= 1200px) {
      grid-row: span 4 / span 4;
    }
  }
  .lg\:row-start-1 {
    @media (width >= 1200px) {
      grid-row-start: 1;
    }
  }
  .lg\:row-start-2 {
    @media (width >= 1200px) {
      grid-row-start: 2;
    }
  }
  .lg\:row-start-3 {
    @media (width >= 1200px) {
      grid-row-start: 3;
    }
  }
  .lg\:mx-0 {
    @media (width >= 1200px) {
      margin-inline: calc(var(--spacing) * 0);
    }
  }
  .lg\:mx-auto {
    @media (width >= 1200px) {
      margin-inline: auto;
    }
  }
  .lg\:mt-5 {
    @media (width >= 1200px) {
      margin-top: calc(var(--spacing) * 5);
    }
  }
  .lg\:mt-8 {
    @media (width >= 1200px) {
      margin-top: calc(var(--spacing) * 8);
    }
  }
  .lg\:mt-\[26\.5em\] {
    @media (width >= 1200px) {
      margin-top: 26.5em;
    }
  }
  .lg\:mt-\[500px\] {
    @media (width >= 1200px) {
      margin-top: 500px;
    }
  }
  .lg\:block {
    @media (width >= 1200px) {
      display: block;
    }
  }
  .lg\:grid {
    @media (width >= 1200px) {
      display: grid;
    }
  }
  .lg\:hidden {
    @media (width >= 1200px) {
      display: none;
    }
  }
  .lg\:inline {
    @media (width >= 1200px) {
      display: inline;
    }
  }
  .lg\:aspect-4\/5 {
    @media (width >= 1200px) {
      aspect-ratio: 4/5;
    }
  }
  .lg\:max-w-2xl {
    @media (width >= 1200px) {
      max-width: var(--container-2xl);
    }
  }
  .lg\:max-w-md {
    @media (width >= 1200px) {
      max-width: var(--container-md);
    }
  }
  .lg\:basis-2\/5 {
    @media (width >= 1200px) {
      flex-basis: calc(2/5 * 100%);
    }
  }
  .lg\:basis-3\/5 {
    @media (width >= 1200px) {
      flex-basis: calc(3/5 * 100%);
    }
  }
  .lg\:-translate-y-4 {
    @media (width >= 1200px) {
      --tw-translate-y: calc(var(--spacing) * -4);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .lg\:columns-2 {
    @media (width >= 1200px) {
      columns: 2;
    }
  }
  .lg\:grid-flow-col-dense {
    @media (width >= 1200px) {
      grid-auto-flow: column dense;
    }
  }
  .lg\:grid-cols-1 {
    @media (width >= 1200px) {
      grid-template-columns: repeat(1, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-4 {
    @media (width >= 1200px) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-5 {
    @media (width >= 1200px) {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-12 {
    @media (width >= 1200px) {
      grid-template-columns: repeat(12, minmax(0, 1fr));
    }
  }
  .lg\:grid-rows-\[1fr_auto\] {
    @media (width >= 1200px) {
      grid-template-rows: 1fr auto;
    }
  }
  .lg\:gap-x-10 {
    @media (width >= 1200px) {
      column-gap: calc(var(--spacing) * 10);
    }
  }
  .lg\:px-6 {
    @media (width >= 1200px) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .lg\:py-5 {
    @media (width >= 1200px) {
      padding-block: calc(var(--spacing) * 5);
    }
  }
  .lg\:py-20 {
    @media (width >= 1200px) {
      padding-block: calc(var(--spacing) * 20);
    }
  }
  .lg\:pr-0 {
    @media (width >= 1200px) {
      padding-right: calc(var(--spacing) * 0);
    }
  }
  .lg\:pr-4 {
    @media (width >= 1200px) {
      padding-right: calc(var(--spacing) * 4);
    }
  }
  .lg\:pr-20 {
    @media (width >= 1200px) {
      padding-right: calc(var(--spacing) * 20);
    }
  }
  .xl\:col-wide {
    @media (width >= 1440px) {
      grid-column: wide;
    }
  }
  .xl\:row-start-2 {
    @media (width >= 1440px) {
      grid-row-start: 2;
    }
  }
  .xl\:grid-cols-3 {
    @media (width >= 1440px) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .pointer-fine\:group-hover\:text-deepblue-600 {
    @media (pointer: fine) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-deepblue-600);
        }
      }
    }
  }
  .pointer-fine\:hover\:-mx-4 {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          margin-inline: calc(var(--spacing) * -4);
        }
      }
    }
  }
  .pointer-fine\:hover\:bg-blue-50 {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-blue-50);
        }
      }
    }
  }
  .pointer-fine\:hover\:bg-blue-500 {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-blue-500);
        }
      }
    }
  }
  .pointer-fine\:hover\:bg-blue-600 {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-blue-600);
        }
      }
    }
  }
  .pointer-fine\:hover\:bg-deepblue-50 {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-deepblue-50);
        }
      }
    }
  }
  .pointer-fine\:hover\:bg-deepblue-100 {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-deepblue-100);
        }
      }
    }
  }
  .pointer-fine\:hover\:bg-slate-100 {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-slate-100);
        }
      }
    }
  }
  .pointer-fine\:hover\:px-4 {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          padding-inline: calc(var(--spacing) * 4);
        }
      }
    }
  }
  .pointer-fine\:hover\:text-blue-600 {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-blue-600);
        }
      }
    }
  }
  .pointer-fine\:hover\:text-blue-700 {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-blue-700);
        }
      }
    }
  }
  .pointer-fine\:hover\:text-blue-800 {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-blue-800);
        }
      }
    }
  }
  .pointer-fine\:hover\:text-deepblue-700 {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-deepblue-700);
        }
      }
    }
  }
  .pointer-fine\:hover\:text-orange-200 {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-orange-200);
        }
      }
    }
  }
  .pointer-fine\:hover\:text-red-400 {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-red-400);
        }
      }
    }
  }
  .pointer-fine\:hover\:text-white {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-white);
        }
      }
    }
  }
  .pointer-fine\:hover\:underline {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          text-decoration-line: underline;
        }
      }
    }
  }
  .pointer-fine\:hover\:decoration-2 {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          text-decoration-thickness: 2px;
        }
      }
    }
  }
  .pointer-fine\:hover\:shadow {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
          box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
      }
    }
  }
  .pointer-fine\:hover\:ring {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
          box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
      }
    }
  }
  .pointer-fine\:hover\:ring-2 {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
          box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
      }
    }
  }
  .pointer-fine\:hover\:ring-12 {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(12px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
          box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
      }
    }
  }
  .pointer-fine\:hover\:ring-blue-500 {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          --tw-ring-color: var(--color-blue-500);
        }
      }
    }
  }
  .pointer-fine\:hover\:ring-blue-600 {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          --tw-ring-color: var(--color-blue-600);
        }
      }
    }
  }
  .pointer-fine\:hover\:ring-deepblue-50 {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          --tw-ring-color: var(--color-deepblue-50);
        }
      }
    }
  }
  .pointer-fine\:hover\:ring-gray-500 {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          --tw-ring-color: var(--color-gray-500);
        }
      }
    }
  }
  .pointer-fine\:hover\:ring-white {
    @media (pointer: fine) {
      &:hover {
        @media (hover: hover) {
          --tw-ring-color: var(--color-white);
        }
      }
    }
  }
}
@layer base {
  @view-transition {
    navigation: auto;
  }
  :where(*, button) {
    text-decoration-thickness: 0.0625rem;
    text-underline-offset: 0.1625rem;
    text-decoration-skip-ink: auto;
  }
  body {
    color: var(--color-slate-800);
  }
  strong {
    font-weight: var(--font-weight-semibold);
  }
  b {
    font-weight: var(--font-weight-medium);
  }
  p:empty {
    display: none;
  }
}
@layer components {
  :where(.prose) > *:not(summary, h2, h3, h4, h5) + * {
    margin-block-start: 1.75em;
  }
  .prose > :where(h1, h2, h3, h4, h5) {
    color: var(--color-gray-900);
    font-weight: var(--font-weight-semibold);
    text-wrap: pretty;
    margin-block: 1.75em 0.25em;
  }
  .prose > :where(h1, h2, h3, h4, h5):first-child {
    margin-block-start: 0.5em;
  }
  :is(.prose) > :where(h2) {
    font-size: var(--text-fluid-28-32);
    line-height: 1.33;
    letter-spacing: -0.0125em;
  }
  :is(.prose) > :where(h3) {
    font-size: var(--text-fluid-22-24);
    line-height: 1.33;
    letter-spacing: -0.0125em;
  }
  :where(.prose) > :where(h2, h3, h4, h5) + :is(.accordion, .readmore, .expander, div) {
    margin-block-start: 0.75em;
  }
  :is(.prose) > h4 {
    font-size: var(--text-fluid-20-22);
    line-height: 1.33;
    letter-spacing: 0;
  }
  :is(.prose) > h5 {
    font-size: var(--text-fluid-18-20);
    font-weight: 650;
    line-height: 1.33;
    margin-block-end: 0.25em;
    letter-spacing: 0.05em;
    font-variant-caps: all-small-caps;
  }
  :where(.prose) > :is(ul, ol) {
    padding-inline-start: calc(var(--spacing) * 5);
  }
  :where(.prose) > ul {
    list-style-type: disc;
  }
  :where(.prose) > ol {
    list-style-type: decimal;
  }
  :where(.prose) > :is(ol,ul) ::marker {
    color: var(--color-brand-purple-deep);
  }
  :where(.prose) > ol ::marker {
    font-weight: 700;
    font-size: var(--text-fluid-16-18);
  }
  :where(.prose) > :where(ol, ul) li {
    padding-inline-start: calc(var(--spacing) * 1);
    margin-inline-start: calc(var(--spacing) * 5);
  }
  :where(.prose) > :where(ol, ul) li + li {
    margin-block-start: calc(var(--spacing) * 1);
  }
  :where(.prose) > :is(p, ul, ol) {
    text-wrap: pretty;
  }
  :where(.prose) > *:not(h2, h3, h4) a {
    color: var(--color-blue-600);
    text-decoration-line: underline;
  }
  :where(.prose) > *:not(h2, h3, h4) a:hover {
    text-decoration-thickness: 2px;
  }
  :is(.prose) > hr {
    border: 0;
    height: auto;
    text-align: center;
    opacity: 0.625;
    padding-block: 0.75em 0.25em;
    padding-inline-end: 1em;
  }
  :is(.prose) > hr:after {
    content: "・・・" / "";
    display: block;
    margin-inline: auto;
    font-weight: 100;
    font-size: 100%;
  }
  :where(.prose) > table {
    text-align: left;
    inline-size: 100%;
  }
  :where(.prose) > table :where(th, td) {
    padding-inline: calc(var(--spacing) * 2) calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
  }
  :where(.prose) > table :where(tbody tr) :where(th, td) {
    border-top-width: 1px;
    border-color: var(--color-slate-300);
  }
  :where(.prose) > table :where(thead th) {
    font-weight: 600;
    line-height: var(--leading-snug);
    vertical-align: bottom;
  }
  :where(.prose) > table :where(tbody th) {
    font-weight: 375;
  }
  :where(.prose) > table :where(tbody tr:nth-child(odd)) > * {
    background-color: var(--color-slate-100);
  }
  :where(.prose) > table :where(tbody tr:first-child) :where(th, td) {
    border-top-width: 2px;
    border-color: var(--color-slate-400);
  }
  .toc-highlight {
    border-inline-start-width: 4px;
    border-color: transparent;
  }
  .toc-highlight--active {
    border-color: var(--color-blue-600);
  }
  .toc-highlight-pill {
    border-radius: calc(infinity * 1px);
  }
  .toc-highlight-pill--active {
    background-color: var(--color-blue-50);
  }
  .accordion {
    border-bottom: 1px solid var(--color-slate-300);
    margin-block-end: calc(var(--spacing) * 12);
  }
  .accordion details {
    display: grid;
    padding-inline: 44px 10px;
    border-top: 1px solid var(--color-slate-300);
  }
  .accordion details + details {
    margin-block-start: 0;
  }
  .accordion details[open] {
    padding-block-end: 36px;
  }
  .accordion summary {
    appearance: none;
    display: block;
    list-style: none;
    padding: 0.5em 44px;
    margin-inline: -44px -10px;
    border-radius: var(--radius-lg);
    cursor: pointer;
    text-align: left;
    text-indent: -31px;
    text-wrap: pretty;
    font-size: var(--text-fluid-18-20);
    font-weight: 400;
    line-height: 1.375;
    background-color: var(--color-white);
    color: var(--color-blue-600);
  }
  .accordion summary::-webkit-details-marker {
    display: none;
  }
  .accordion details[open] summary {
    margin-block-end: 8px;
    position: sticky;
    top: 0;
    z-index: 20;
  }
  .accordion summary:hover {
    background-color: var(--color-blue-50);
    color: var(--color-blue-600);
    border-radius: var(--radius-xl);
  }
  .accordion summary:before {
    background-color: var(--color-blue-50);
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 24 24' fill='none'%3E%3Cpath stroke='rgb(0 103 197 / 1)' stroke-linecap='round' stroke-width='2' d='m6.5 10 5.493 5.493a.01.01 0 0 0 .014 0L17.5 10'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: center;
    content: "";
    display: inline-block;
    flex-shrink: 0;
    place-items: center;
    translate: 0 4px;
    margin-inline-end: 10px;
    border-radius: 10px;
    transition: rotate 150ms;
    width: 24px;
    height: 24px;
  }
  .accordion :where(details:has(summary:hover)) summary:not(:focus-visible) {
    outline: 4px solid white;
  }
  .accordion :where(details[open]) summary:before {
    rotate: -180deg;
  }
  .accordion summary:hover:before {
    background-color: var(--color-blue-700);
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 24 24' fill='none'%3E%3Cpath stroke='rgb(255 255 255 / 1)' stroke-linecap='round' stroke-width='2' d='m6.5 10 5.493 5.493a.01.01 0 0 0 .014 0L17.5 10'/%3E%3C/svg%3E");
  }
  .accordion summary > * {
    text-wrap: pretty;
  }
  [data-theme="sykepenger"] :where(.accordion) details {
    padding-inline: 42px;
  }
  [data-theme="sykepenger"] :where(.accordion) summary {
    margin-inline: -42px;
    padding-inline: 42px;
    text-indent: -31px;
  }
  .expander {
    display: grid;
  }
  .expander[open] {
    padding-block-end: 20px;
  }
  :where(.expander) summary {
    appearance: none;
    display: flex;
    list-style: none;
    place-self: start;
    width: fit-content;
    padding: 0.5em 8px 0.375em 16px;
    border-radius: calc(infinity * 1px);
    cursor: pointer;
    text-align: left;
    text-wrap: pretty;
    line-height: 1.375;
    color: var(--color-blue-700);
    font-weight: 500;
    gap: calc(var(--spacing) * 0.5);
    background-color: var(--color-blue-50);
  }
  :where(.expander) summary::-webkit-details-marker {
    display: none;
  }
  :where(.expander[open]) summary {
    margin-block-end: calc(var(--spacing) * 2);
    outline: 4px solid white;
    position: sticky;
    top: 4px;
    z-index: 20;
  }
  :where(.expander) summary:hover {
    background-color: var(--color-blue-100);
  }
  :where(.expander) summary:after {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'%3E%3Cpath stroke='rgb(0 69 156)' stroke-linecap='round' stroke-width='1.75' d='m6.5 10 5.493 5.493a.01.01 0 0 0 .014 0L17.5 10'/%3E%3C/svg%3E");
    background-position: center;
    background-repeat: no-repeat;
    content: "";
    display: inline-block;
    flex-shrink: 0;
    place-items: center;
    align-self: baseline;
    margin-inline: 1.5rem 10px;
    transition: transform 150ms;
    transform: translateY(1px);
    width: 22px;
    height: 22px;
  }
  :where(.expander[open]) summary:after {
    transform: translateY(1px) rotate(-180deg);
  }
  :where(.expander) summary > * {
    text-wrap: pretty;
  }
  :where(.expander) summary > span {
    transform: translateY(0px);
  }
  .readmore {
    display: grid;
    margin-block-end: 40px;
  }
  :where(.readmore) summary {
    appearance: none;
    display: flex;
    width: fit-content;
    list-style: none;
    padding: 0.5em 24px 0.375em 44px;
    cursor: pointer;
    background-color: var(--color-blue-50);
    border-radius: calc(infinity * 1px);
    color: var(--color-blue-600);
    line-height: 1.375;
    font-weight: 500;
    text-align: left;
    text-wrap: pretty;
  }
  :where(.readmore) summary::-webkit-details-marker {
    display: none;
  }
  :where(.readmore) summary:before {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'%3E%3Cpath stroke='rgb(0 69 156)' stroke-linecap='round' stroke-width='1.75' d='m6.5 10 5.493 5.493a.01.01 0 0 0 .014 0L17.5 10'/%3E%3C/svg%3E");
    background-position: center;
    background-repeat: no-repeat;
    content: "";
    display: inline-block;
    flex-shrink: 0;
    place-items: center;
    align-self: center;
    margin-inline: -30px 8px;
    transition: transform 150ms;
    width: 22px;
    height: 22px;
  }
  :where(.readmore) summary:hover {
    background-color: var(--color-blue-100);
  }
  :where(.readmore[open]) summary {
    outline: 4px solid white;
    position: sticky;
    top: 4px;
    z-index: 20;
    margin-bottom: 8px;
  }
  :where(.readmore[open]) summary:before {
    transform: rotate(-180deg);
  }
  :where(.readmore) summary > * {
    text-wrap: pretty;
  }
  :where(.readmore) summary > span {
    transform: translateY(-1px);
  }
  .button {
    line-height: 1.15;
    overflow: visible;
    padding: calc(var(--spacing) * 3) calc(var(--spacing) * 5);
    align-items: center;
    border: 2px solid var(--color-blue-600);
    border-radius: var(--radius-md);
    cursor: pointer;
    display: inline-flex;
    gap: calc(var(--spacing) * 2);
    justify-content: center;
    font-weight: var(--font-weight-semibold);
    text-decoration: none;
    margin: 0;
  }
  .button--primary {
    background-color: var(--color-white);
    border-color: var(--color-blue-600);
    color: var(--color-blue-600);
  }
  .button--primary:hover {
    border-color: var(--color-blue-700);
    background-color: var(--color-blue-50);
    color: var(--color-blue-700);
  }
  .button--secondary {
    border-color: var(--color-transparent);
    background-color: var(--color-blue-50/75);
  }
  .button--secondary:hover {
    border-color: var(--color-blue-600);
    background-color: var(--color-blue-50);
  }
  .button--tertiary {
    border-color: var(--color-blue-50);
    background-color: var(--color-blue-50);
  }
  .button--tertiary:hover {
    background-color: var(--color-blue-100);
    border-color: var(--color-blue-100);
  }
  .wave {
    --size: 6px;
    --p: 3px;
    --R: 6px;
    mask: radial-gradient(var(--R) at left 50% top calc(var(--size) + var(--p)), var(--color-black) 99%, var(--color-transparent) 101%) calc(50% - 2 * var(--size)) 0/calc(4 * var(--size)) 100%, radial-gradient(var(--R) at left 50% top calc(-1 * var(--p)), var(--color-transparent) 99%, var(--color-black) 101%) left 50% top var(--size) / calc(4 * var(--size)) 100% repeat-x;
  }
}
.grid-cols-article {
  --_main: minmax(0, min(42.5rem, 100%));
  --_pictogram: 5rem;
  --_pictogram-gap: 1.5rem;
  --_main-toc-gap: clamp(2.5rem, -6.5rem + 15vw, 8.5rem);
  grid-template-columns: [full-start] var(--spacing-page) [container-start] auto [pictogram-start main-start toc-start] var(--_main) [pictogram-end main-end toc-end] auto [container-end] var(--spacing-page) [full-end];
}
@media (width > 1200px) {
  .grid-cols-article {
    --_main: minmax(0, min(42.5rem, 70%));
    --_toc: minmax(0, min(22.5rem, 30%));
    grid-template-columns: [full-start] var(--spacing-page) auto [container-start pictogram main] 2fr var(--_main-toc-gap) [toc] 1fr [container-end] auto var(--spacing-page) [full-end];
  }
}
@media (width > 1440px) {
  .grid-cols-article {
    grid-template-columns: [full-start] var(--spacing-page) minmax(0, 1fr) [container-start pictogram] var(--_pictogram) var(--_pictogram-gap) [main] var(--_main) var(--_main-toc-gap) [toc-start] var(--_toc) [toc-end container-end] minmax(0, 1fr) var(--spacing-page) [full-end];
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@keyframes dropdown {
  0% {
    transform: translateY(-1rem);
  }
  10% {
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}
@keyframes openDrawer {
  from {
    transform: translate3d(50%, 0, 0);
    opacity: 0;
  }
  to {
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
}
@keyframes fade-in {
  0%, 20% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-divide-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-content: "";
    }
  }
}
