---
tags: ['produkt']
variant: 'A'
description: 'Enkel innholdsmeny i grå bokser. Kapittelmeny er alltid i hovedspalte, men dukker også opp i sidespalte (sticky) på desktop når bruker scroller forbi den i hovedspalten'
permalink: 'produkt/pleiepenger/a/index.html'
---
{%- extends 'base.njk' -%}

{%- from "macros/button.njk" import button -%}
{%- from "macros/microcard.njk" import microcard -%}
{%- from "macros/tile.njk" import tile -%}

{%- block content -%}

  {% set chapters = collections.all| onlyTags('pleiepenger', 'innhold') | sort(false, false, 'data.order') %}

  <main class="grid py-16 grid-cols-left-1 lg:grid-cols-left-2">
    <div class="col-main lg:col-wide">
      <div class="text-sm tracking-widest uppercase">{{ type | safe }}</div>
      <h1 class="mt-1 font-bold text-4xl/tight text-balance">{{ title | safe }}</h1>
      <div class="mt-8 text-lg text-pretty max-w-prose">{{ ingress | markdown | safe }}</div>

      {# Audience #}
      <div class="mt-6 -ml-1">
        <span class="inline-block px-3 py-2 text-sm leading-none rounded-full bg-slate-200 ">
          {{ 'For ' if audience }}{{ audience | lower | safe }}
        </span>
      </div>
    </div>

    {# Innholdsfortegnelse #}
    <div class="mt-8">
      <h2 class="text-base font-semibold">Innhold på siden</h2>
      <ul class="grid mt-2">
        {% for chapter in chapters.slice(0,4) %}
        <li class="relative grid items-center bg-slate-100 px-5 group hover:bg-blue-50 {{ 'rounded-t-xl pt-4 pb-2.5' if loop.first }} {{ 'rounded-b-xl pb-4 pt-2.5' if loop.last }} {{ 'py-2.5' if not (loop.first or loop.last) }}">
          <a class="font-semibold underline text-base/snug group-hover:no-underline after:absolute after:inset-0" href="#{{ chapter.data.title | slugify }}">
            {{ chapter.data.title }}
          </a>
          <p class="text-pretty">{{ chapter.data.ingress | safe }}</p>
        </li>
        {% endfor %}

        {% for chapter in chapters.slice(-1) %}
        <li class="relative grid items-center px-5 py-3.5 mt-2.5 bg-slate-100 rounded-xl group hover:bg-blue-50">
          <a class="font-semibold underline text-base/snug group-hover:no-underline after:absolute after:inset-0 " href="#{{ chapter.data.title | slugify }}">
            {{ chapter.data.title }}
          </a>
        </li>
        {% endfor %}
      </ul>
    </div>


    {# Innhold #}
    {% for chapter in chapters | sort(false, false, 'data.order') %}
      {% set chapterIndex = loop.index %}
      <section 
        class="grid items-end pt-12 col-full grid-cols-left-1 lg:grid-cols-left-2" 
        id="{{ chapter.data.title | slugify }}" 
        x-data="{ tocShown: false, tocOpen: false }"
      >
        <div class="grid grid-cols-left-1 lg:grid-cols-left-2 col-full">
          {# <div class="rounded-lg aspect-[2/1] border border-slate-300 mb-sm"></div> #}
          <div class="text-[360px]/[0.8] -translate-x-2 font-black text-slate-200 pt-2xl">{{ loop.index }}</div>

          {# <div class="text-sm tracking-widest uppercase">Kapittel {{ loop.index }}</div> #}
          <h2 class="font-bold text-3xl/snug text-balance">{{ chapter.data.title }}</h2>

          {# Static Chapter TOC #}
          {% if chapter.templateContent %}
          <nav class="px-5 py-3 mt-4 rounded-lg bg-slate-100 col-main toc bottom-xl max-w-max">
            <h3 class="font-semibold">I dette kapittelet</h3>
            {{ chapter.templateContent | toc | safe }}
          </nav>
          {% endif %}

          <p class="mt-8">{{ chapter.data.ingress | safe }}</p>
        </div>

        <div class="flex items-start justify-between gap-x-24 col-wide">

          {# Main Content #}
          <div class="mt-8 prose lg:basis-3/5 max-w-prose shrink-1" x-intersect:enter.margin.3%.0px.-97%.0px="tocShown = true" x-intersect:leave.margin.3%.0px.-97%.0px="tocShown = false">
            {{ chapter.templateContent | markdown | safe }}
          </div>

          {# Sticky Chapter TOC #}
          {% if chapter.templateContent %}
          <div class="hidden lg:block sticky lg:max-w-md my-8 toc toc--sticky top-6 min-h-[92vh] lg:basis-2/5 shrink-5">
            <nav class="sticky py-3 rounded-lg top-6 bg-slate-100" 
              x-show="tocShown" 
              x-transition:enter="transition ease-out duration-300"
              x-transition:enter-start="opacity-0"
              x-transition:enter-end="opacity-100"
              x-transition:leave="transition ease-out duration-900 opacity-0"
            >
              <div class="relative">
                <h3 class="px-4 font-semibold">
                  I dette kapittelet
                  <span class="hidden lg:inline">({{ chapterIndex }})</span>
                </h3>
                <div class="px-3">
                  {{ chapter.templateContent | toc | safe }}
                </div>
              </div>
            </nav>
          </div>
          {% endif %}
        </div>
      </section>
    {% endfor %}

    <div class="pt-2 mt-12 text-sm italic border-t border-slate-200 col-wide">{{ published | safe }}</div>
  </main>
{%- endblock -%}


{% block bodyscript %}
  <script>
    const headings = document.querySelectorAll('.prose h3');
    const headingsArr = Array.from(headings);

    const navItems = document.querySelectorAll('.toc--sticky li');

    function activateNavByIndex(index) {
      if (headings[index].classList.contains('active'))
        return;

      const currentActive = document.querySelectorAll('.toc--sticky .active');
      for (let i = currentActive.length - 1; i >= 0; i--) {
        currentActive[i].classList.remove('active');
      }
      navItems[index].classList.add('active');
    }

    const intersectionCallback = (entries, observer) => {
      if (entries[0].intesectionRatio <= 0)
          return;
      
      if (entries[0].intersectionRatio > 0.90) {    
        activateNavByIndex(headingsArr.indexOf(entries[0].target))
      }
    };

    const intersectionOptions = {
      threshold: 1,
      rootMargin: '15% 0px -60% 0px'
    };

    const intersectionObserver = new IntersectionObserver(intersectionCallback, intersectionOptions);

    for (let i = 0; i < headings.length; i++) {
      intersectionObserver.observe(headings[i]);  
    }

  </script>
{% endblock %}