{%- extends 'base.njk' -%}

{%- block content -%}

  {% set chapters = collections[chapters] | sort(false, false, 'data.order') %}

  <main class="relative grid items-start pt-16 pb-16 grid-cols-article toc-highlight" data-theme="sykepenger" x-data="{ chapterIndex: 0 }" style="--scopes: {% for chapter in chapters %}--chapter-{{ loop.index }}{{ ',' if not loop.last else ';' }}{% endfor %}" x-intersect:enter.margin.-50%.0.0.0="tocFixed = true">
    <div class="mb-3 col-pictogram" style="--pictogram: var(--color-deepblue-100)">
      {{ '/src/_includes/svg/piktogrammer/produkter/sykepenger.svg' | svgContents('text-deepblue-900 w-16 h-16 sm:w-20 sm:h-20 -translate-x-1') | safe  }}
    </div>
    <div class="col-main md:col-start-[main] md:col-end-[container]">
      <h1 class="font-bold text-fluid-36-48/tight text-pretty">{{ title | safe }}</h1>
      <div class="mt-4 text-gray-700 text-fluid-12-14 font-regular">
        <span class="px-1.5 py-px border rounded-sm border-slate-300 bg-slate-100">{{ category | safe }}</span>
        {%- if audience.description %}
          <span aria-hidden="true" class="inline-block mx-1">—</span>
          {{- audience.description | safe -}}
        {% endif -%}
      </div>
    </div>
    <div class="mt-6 pb-9 col-main">
      <p class="prose text-fluid-18-20 text-pretty">
        {{ ingress | safe }}

        {% if audience.others %}          
          {{ audience.others | markdownInline | safe if audience }}      
        {% endif %}
      </p>
    </div>

    {% block quicklinks %}{% endblock %}

    {# Innholdsfortegnelse sticky #}
    <div class="lg:row-span-4 lg:sticky bg-white lg:row-start-2 xl:row-start-2 lg:top-0 col-toc max-h-[99svh] overflow-auto toc px-4 pt-3 pb-6 mb-4" id="toc" x-intersect:leave.margin.-100px.0.0.0="tocFixed = true" x-intersect:enter.margin.0.0.0.0="tocFixed = false, tocOpen = false">
      <h2 class="flex items-baseline sticky z-10 lg:bg-white top-0 py-2 font-semibold gap-x-0.5 text-fluid-18-20">
        <a href="#toppen">{{ '/src/_includes/svg/icons/document.svg' | svgContents('w-6 h-6 translate-y-1 -translate-x-0.5') | safe  }}</a>
        <span>Innhold på siden</span>
      </h2>
      <ul class="pr-6 ml-2 border-l-2 lg:text-fluid-16-18/normal opacity-90 border-slate-300">
        {% for chapter in chapters %}
        {% set chapterIndex = loop.index %}
        <li>
          <a class="inline-block py-1.5 pl-4 pr-8 border-l-2 -ml-0.5 underline border-transparent hover:text-blue-700 hover:decoration-2 underline-offset-3 decoration-slate-800/40 hover:decoration-blue-700 toc-item" href="#{{ chapter.data.title | slugify }}" x-on:click="tocOpen = false">
            {{ chapter.data.title }}
          </a>
          {% if (chapter.templateContent | tocData).length >= 2 %}           
          <ul class="hidden" x-bind:class="{ 'lg:block' : chapterIndex == {{ chapterIndex }} }">
            {% for item in chapter.templateContent | tocData %}
            <li>
              <a class="inline-block py-1.5 pr-6 pl-8 underline border-l-2 -ml-0.5 border-transparent hover:text-blue-700 decoration-slate-800/40 hover:decoration-blue-700 underline-offset-3 hover:decoration-2" href="#{{ item.id }}" x-on:click="tocOpen = false">
                <span>{{ item.text }}</span>
              </a>
            </li>
            {% endfor %}
          </ul>
          {% endif %}
        </li>
        {% endfor %}
      </ul>
    </div>

    {# Innholdsfortegnelse fixed #}
    <div 
      class="fixed inset-x-0 top-0 z-50 grid grid-cols-article lg:hidden" x-show="tocFixed" 
      x-transition:enter="transition ease-out duration-200"
      x-transition:enter-start="opacity-0 -translate-y-6"
      x-transition:enter-end="opacity-100 translate-y-0"
      x-transition:leave="transition ease-in duration-200"
      x-transition:leave-start="opacity-100 translate-y-0"
      x-transition:leave-end="opacity-0 -translate-y-6"
    >
      <div class="bg-white rounded-b-xl col-main overflow-clip" x-bind:class="tocOpen || 'ring-white ring-2'">
        <button type="button" class="flex items-center w-full gap-1 px-4 py-3 font-semibold text-blue-600 cursor-pointer rounded-b-xl bg-blue-50 text-fluid-18-20 hover:bg-blue-100" x-on:click="tocOpen = !tocOpen">
          {{ '/src/_includes/svg/icons/document.svg' | svgContents('w-6 h-6 -translate-y-0.5 -translate-x-[3px]') | safe  }}</a>
          <span>Innhold på siden</span>
          <span class="-translate-y-0.5 ml-auto" x-bind:class="tocOpen && 'rotate-180 transition-transform duration-200'">
          {{ '/src/_includes/svg/icons/chevron-down.svg' | svgContents('') | safe }}</span>
        </button>
        <div x-show="tocOpen" class="h-[13lh] pt-2 overflow-y-auto overscroll-y-contain" style="scrollbar-color:var(--color-slate-400) #0000">
          <ul class="pr-6 mx-6 border-l-2 text-fluid-16-18/normal border-slate-300">
            {% for chapter in chapters %}
            {% set chapterIndex = loop.index %}
            <li class="not-first:mt-1">
              <a class="inline-block border-l-2 py-1.5 pl-4 pr-8 -ml-0.5 underline hover:text-blue-700 hover:decoration-2 underline-offset-3 decoration-slate-800/40 rounded-r-md hover:decoration-blue-700 toc-item" x-bind:class="(chapterIndex == {{ chapterIndex }}) ? 'border-deepblue-600 bg-deepblue-100/50' : 'border-transparent'" href="#{{ chapter.data.title | slugify }}" x-on:click="tocOpen = false">
                {{ chapter.data.title }}
              </a>
              {% if (chapter.templateContent | tocData).length >= 2 %}           
              <ul class="hidden my-1.5 ml-8 mb-2" x-bind:class="{ 'hidden' : ((chapterIndex != {{ chapterIndex }}) && !tocExpandAll) || !tocFixed }">
                {% for item in chapter.templateContent | tocData %}
                <li class="not-first:mt-1">
                  <a class="inline-block p-1 underline hover:text-blue-700 decoration-slate-800/40 hover:decoration-blue-700 underline-offset-3 hover:decoration-2" href="#{{ item.id }}" x-on:click="tocOpen = false">
                    <span>{{ item.text }}</span>
                  </a>
                </li>
                {% endfor %}
              </ul>
              {% endif %}
            </li>
            {% endfor %}
          </ul>
          <a class="inline-flex items-center gap-1 px-1.5 mt-6 ml-2 underline text-fluid-16-18 hover:text-blue-700 decoration-slate-800/40 hover:decoration-blue-700 underline-offset-3 hover:decoration-2" x-on:click="tocOpen = false" href="#toppen">
            {{ '/src/_includes/svg/icons/arrow-up.svg' | svgContents('w-6 h-6') | safe }}
            <span>Til toppen av siden</span>
          </a>
        </div>
      </div>
    </div>

    <div x-intersect:enter.margin.0.0.0.0="tocFixed = false, tocOpen = false"></div>

    {# Innhold #}
    {% for chapter in chapters %}
      {% set chapterIndex = loop.index %}
      <section class="mb-16 prose col-main toc-chapter" id="{{ chapter.data.title | slugify }}" x-intersect.margin.-5%.0%.-30%.0%="chapterIndex = {{ chapterIndex }}" style="--is: --chapter-{{ loop.index }}">
        <div class="w-10 h-[0.625ch] bg-deepblue-200 mt-8"></div>
        <h2 class="mt-5 mb-4 -translate-x-0.5 font-bold text-fluid-32-36/tight text-balance" id="{{ chapter.data.title | slugify }}">
          <a href="#{{ chapter.data.title | slugify }}">
            <span>{{ chapter.data.title }}</span>
          </a>
        </h2>

        {# Main Content #}
        {{ chapter.templateContent | markdown | safe }}
      </section>
    {% endfor %}
    </div>

    <div class="pt-2 mt-12 italic border-t text-fluid-16-18 border-slate-200 col-main">
      {{ published | safe }}
    </div>
  </main>

  {% include "partials/kontakt.njk" %}

{%- endblock -%}


{% block bodyscript %}
  <script>
      const headings = Array.from(document.querySelectorAll('main h2, main h3')).filter((heading) => heading.id != '');
      const toc = document.getElementById('toc');

      const highlight = (item, headingId) => {

      }

      let observer = new IntersectionObserver(
        (entries, observer) => {
          entries.forEach((entry) => {
            const id = entry.target.id;
            if (entry.isIntersecting) {
              toc.querySelector(`a[href="#${id}"]`).classList.add('tocHighlight')
            } else {
              toc.querySelector(`a[href="#${id}"]`).classList.remove('tocHighlight')
            }
          })
        }, { 
          rootMargin: '75% 0px -25% 0px',
          threshold: 1.0
        }
      );
      headings.forEach((heading) => {
        observer.observe(heading);
      })
  </script>
{% endblock %}