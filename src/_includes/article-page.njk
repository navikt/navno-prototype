{%- extends 'base.njk' -%}

{%- block content -%}

  {% set chapters = collections[chapters] | sort(false, false, 'data.order') %}

  <main class="relative grid items-start pt-16 pb-16 grid-cols-article toc-highlight overflow-clip" data-theme="sykepenger" x-data="{ chapterIndex: 0 }">
    <div class="mb-3 col-pictogram" style="--pictogram: var(--color-deepblue-100)">
      {{ '/src/_includes/svg/piktogrammer/produkter/sykepenger.svg' | svgContents('text-deepblue-900 w-16 h-16 sm:w-20 sm:h-20 -translate-x-1') | safe  }}
    </div>
    <div class="col-main md:col-start-[main] md:col-end-[container]">
      <h1 class="font-bold text-fluid-36-48/tight text-pretty">{{ title | safe }}</h1>
      <div class="mt-4 text-gray-700 text-fluid-12-14 font-regular">
        <span class="px-1.5 py-px border rounded-sm border-slate-300 bg-slate-100">{{ category | safe }}</span>
        {%- if audience.description %}
          <span aria-hidden="true" class="inline-block mx-1">—</span>
          {{- audience.description | safe -}}
        {% endif -%}
      </div>
    </div>
    <div class="mt-6 pb-9 col-main">
      <p class="prose text-fluid-18-20 text-pretty">
        {{ ingress | safe }}

        {% if audience.others %}          
          {{ audience.others | markdownInline | safe if audience }}      
        {% endif %}
      </p>
    </div>

    {% block quicklinks %}{% endblock %}

    {# Innholdsfortegnelse sticky #}
    <div class="lg:row-span-4 lg:sticky bg-white lg:row-start-2 xl:row-start-2 lg:top-0 col-toc max-h-[99svh] overflow-auto toc px-4 lg:pr-0 pt-3 pb-6 mb-4" id="toc" x-intersect:enter="tocFixed = false, tocOpen = false" x-intersect:leave="tocFixed = true">
      <h2 class="flex items-baseline sticky z-10 lg:bg-white top-0 py-2 font-semibold gap-x-0.5 text-fluid-18-20" >
        <a href="#toppen">{{ '/src/_includes/svg/icons/document.svg' | svgContents('w-6 h-6 translate-y-1 -translate-x-0.5') | safe  }}</a>
        <span>Innhold på siden</span>
      </h2>
      <ul class="ml-2 lg:text-fluid-16-18/normal">
        {% for chapter in chapters %}
        {% set chapterIndex = loop.index %}
        <li class="border-l-2 border-slate-300" x-bind:class="(chapterIndex == {{ chapterIndex }}) && 'lg:border-deepblue-600'">
          <a class="inline-block py-1.5 pl-4 pr-8 underline hover:text-blue-700 hover:decoration-2 underline-offset-3 decoration-slate-800/40 hover:decoration-blue-700 text-deepblue-900" href="#{{ chapter.data.title | slugify }}" x-on:click="tocOpen = false">
            {{ chapter.data.title }}
          </a>
          {% if (chapter.templateContent | tocData).length >= 2 %}           
          <ul class="hidden pb-3" x-bind:class="(chapterIndex == {{ chapterIndex }}) && 'lg:block'">
            {% for item in chapter.templateContent | tocData %}
            <li>
              <a class="inline-block py-1.5 pr-6 pl-9 underline text-deepblue-900 hover:text-blue-700 decoration-slate-800/40 opacity-85 hover:decoration-blue-700 underline-offset-3 hover:decoration-2" href="#{{ item.id }}" x-on:click="tocOpen = false">
                <span>{{ item.text }}</span>
              </a>
            </li>
            {% endfor %}
          </ul>
          {% endif %}
        </li>
        {% endfor %}
      </ul>
    </div>

    {# Innholdsfortegnelse fixed #}
    <div 
        class="sticky top-2 right-0 w-max max-w-[80vw] z-50 row-start-5 col-end-[full] lg:hidden" 
        x-show="tocFixed" x-bind:class="tocOpen && 'min-w-[320px]'"
        x-transition:enter="transition ease-out duration-200"
        x-transition:enter-start="opacity-0 scale-90"
        x-transition:enter-end="opacity-100 scale-100"
        x-transition:leave="transition ease-in duration-200"
        x-transition:leave-start="opacity-100 scale-100"
        x-transition:leave-end="opacity-0 scale-90"    
    >
      <button type="button" class="flex items-center w-full gap-1 px-4 pt-2.5 pb-2 font-semibold text-white cursor-pointer pop bg-deepblue-800 text-fluid-18-20 hover:bg-deepblue-700" x-on:click="tocOpen = !tocOpen" x-bind:class="tocOpen ? 'rounded-tl-2xl drawerOpen' : 'rounded-l-full'">
        {{ '/src/_includes/svg/icons/document.svg' | svgContents('w-6 h-6 shrink-0 -translate-y-0.5 -translate-x-0.5') | safe  }}</a>
        <span class="pr-4">Innhold på siden</span>
        <span class="ml-auto -translate-y-0.5" x-bind:class="tocOpen && 'rotate-180 transition-transform duration-200'">
        {{ '/src/_includes/svg/icons/chevron-down.svg' | svgContents('') | safe }}</span>
      </button>
      <div x-show="tocOpen" class="h-[93vh] pt-2 overflow-y-auto bg-white rounded-bl-2xl -z-10 overscroll-y-contain" style="scrollbar-color:var(--color-slate-400) #0000" x-on:click.outside="tocOpen = false">
        <ul class="px-4 mb-6 ml-2 lg:text-fluid-16-18/normal">
          {% for chapter in chapters %}
          {% set chapterIndex = loop.index %}
          <li class="border-l-2 border-slate-300">
            <a class="inline-block py-1.5 pl-4 pr-8 underline hover:text-blue-700 hover:decoration-2 underline-offset-3 decoration-slate-800/40 hover:decoration-blue-700 text-deepblue-900" href="#{{ chapter.data.title | slugify }}" x-on:click="tocOpen = false">
              {{ chapter.data.title }}
            </a>
            {% if (chapter.templateContent | tocData).length >= 2 %}           
            <ul class="pb-3">
              {% for item in chapter.templateContent | tocData %}
              <li>
                <a class="inline-block py-1.5 pr-6 pl-9 underline text-deepblue-900 hover:text-blue-700 decoration-slate-800/40 opacity-85 hover:decoration-blue-700 underline-offset-3 hover:decoration-2" href="#{{ item.id }}" x-on:click="tocOpen = false">
                  <span>{{ item.text }}</span>
                </a>
              </li>
              {% endfor %}
            </ul>
            {% endif %}
          </li>
          {% endfor %}
        </ul>
        <div class="sticky bottom-0 pb-2 bg-white">
          <div class="absolute inset-x-0 h-8 pointer-events-none bottom-full bg-gradient-to-t from-white to-transparent"></div>
          <a class="inline-flex items-center gap-1 px-1.5 ml-2 underline text-fluid-16-18 hover:text-blue-700 decoration-slate-800/40 hover:decoration-blue-700 underline-offset-3 hover:decoration-2" x-on:click="tocOpen = false" href="#toppen">
            {{ '/src/_includes/svg/icons/arrow-up.svg' | svgContents('w-6 h-6') | safe }}
            <span>Til toppen av siden</span>
          </a>
        </div>
      </div>
    </div>

    {# Innhold #}
    {% for chapter in chapters %}
      {% set chapterIndex = loop.index %}
      <section class="mb-16 prose col-main toc-chapter" id="{{ chapter.data.title | slugify }}" x-intersect.threshold.01="chapterIndex = {{ chapterIndex }}">
        <div class="w-10 h-[0.625ch] bg-deepblue-200 mt-8"></div>
        <h2 class="mt-5 mb-4 -translate-x-0.5 font-bold text-fluid-32-36/tight text-balance" id="{{ chapter.data.title | slugify }}">
          <a href="#{{ chapter.data.title | slugify }}">
            <span>{{ chapter.data.title }}</span>
          </a>
        </h2>

        {# Main Content #}
        {{ chapter.templateContent | markdown | safe }}
      </section>
    {% endfor %}
    </div>

    <div class="pt-2 mt-12 italic border-t text-fluid-16-18 border-slate-200 col-main">
      {{ published | safe }}
    </div>
  </main>

  {% include "partials/kontakt.njk" %}

{%- endblock -%}


{% block bodyscript %}
  <script>
      const headings = Array.from(document.querySelectorAll('main h2, main h3')).filter((heading) => heading.id != '');
      const highlight = (item, headingId) => {

      }

      let observer = new IntersectionObserver(
        (entries, observer) => {
          entries.forEach((entry) => {
            const id = entry.target.id;
            const highlighted = document.querySelectorAll(`.toc a[href="#${id}"]`)
            if (entry.isIntersecting) {
              highlighted.forEach(el => el.classList.add('tocHighlight'))
            } else {
              highlighted.forEach(el => el.classList.remove('tocHighlight'))
            }
          })
        }, { 
          rootMargin: '30% 0% -15% 0%',
          threshold: 0.05
        }
      );
      headings.forEach((heading) => {
        observer.observe(heading);
      })
  </script>
{% endblock %}