---
tags: ['produkt']
description: 'Med sticky innholdsmeny og enkel kapittelmeny.'
permalink: 'produkt/sykepenger/2/index.html'
variant: '2'
---
{%- extends 'base.njk' -%}

{%- block content -%}
  {% set chapters = collections.all | onlyTags('sykepenger', 'innhold') | sort(false, false, 'data.order') %}

  <main class="grid py-16 grid-cols-center" data-theme="sykepenger" x-data="{ showChapter1: false, showChapter2: false, showChapter3: false, showChapter4: false, showChapter5: false, showToc: false, expandToc: false }">
    <div class="col-main">
      <h1 class="mb-4 font-extrabold text-2xl/tight text-balance ">{{ title | safe }}</h1>
      <div class="text-sm tracking-widest uppercase">{{ type | safe }}</div>
      <div class="mt-4 prose text-pretty max-w-prose">
        <p class="text-lg">{{ ingress | safe }}</p>

        <div class="px-5 py-3 border rounded-lg border-slate-300 text-balance">
          {{ audience | markdown | safe if audience }}
        </div>
      </div>
    </div>

    {# Innholdsfortegnelse #}
    <nav class="px-5 py-3 mt-8 rounded-lg bg-slate-100" x-intersect:enter.margin.-5px.0%.0%.0%="showToc = false" x-intersect:leave.margin.-5px.0%.0%.0%="showToc = true">
      <h2 class="pb-2 text-base font-semibold">Innhold på siden</h2>
      <ul class="grid gap-4 py-1">
        {% for chapter in chapters %}
        <li class="grid">
          <a class="flex gap-1 p-1 -m-1 font-medium text-blue-500 underline group hover:text-blue-700 text-base/snug hover:decoration-2" href="#{{ chapter.data.title | slugify }}">
            {{ '/src/_includes/svg/icons/arrow-right-angle-aksel.svg' | svgContents('translate-y-1 w-5 h-5') | safe }}
            {{ chapter.data.title }}
          </a>
          <p class="pr-4 pl-6 mt-0.5 text-pretty opacity-85">{{ chapter.data.ingress | safe }}</p>
        </li>
        {% endfor %}
      </ul>
    </nav>

    {# Sticky Chapter TOC #}
    <div 
      class="sticky top-0 z-10 shadow-lg isolate col-full" 
      aria-hidden="true"
      x-show="showToc"
      x-transition:enter="transition ease-out duration-200"
      x-transition:enter-start="opacity-0 -translate-y-full"
      x-transition:enter-end="opacity-100 translate-y-0"
      x-on:click.outside="expandToc = false"
    >
      <button class="relative z-20 flex items-center justify-center w-full gap-1 px-3 py-2.5 col-full whitespace-nowrap bg-slate-100 hover:bg-white" type="button" x-on:click="expandToc = !expandToc">
        <span>Innhold på siden</span>
        {{ '/src/_includes/svg/icons/chevron-down.svg' | svgContents('w-5 h-5') | safe }}
      </button>
      <div 
        class="absolute inset-x-0 top-0 z-10 grid pt-20 pb-8 rounded-b-lg grid-cols-center" 
        x-bind:class="expandToc ? 'bg-slate-100 shadow-lg' : 'hidden'"
      >
        <ol class="grid gap-4 py-1 toc toc--multi toc--sticky">
          {% for chapter in chapters %}
          <li class="grid">
            <a 
              class="flex gap-1 p-1 -m-1 font-medium text-blue-500 underline group hover:text-blue-700 text-base/snug hover:decoration-2" 
              href="#{{ chapter.data.title | slugify }}" 
              x-on:click="expandToc = false"
            >
              {{ '/src/_includes/svg/icons/arrow-right-angle-aksel.svg' | svgContents('translate-y-1 w-5 h-5') | safe }}
              {{ chapter.data.title }}
            </a>
            <p class="pr-4 pl-6 mt-0.5 text-pretty opacity-85">{{ chapter.data.ingress | safe }}</p>
          </li>
          {% endfor %}
          <li class="pt-4 mt-1 border-t border-slate-400/25">
            <a 
              class="flex gap-1 p-1 text-blue-500 underline group hover:text-blue-700 text-base/snug hover:decoration-2" 
              href="{{ page.url }}" 
              x-on:click="expandToc = false"
            >
              {{ '/src/_includes/svg/icons/arrow-up.svg' | svgContents('translate-y-1 w-5 h-5') | safe }}
              Til toppen av siden
            </a>
          </li>
        </ol>
      </div>
    </div>

    {# <div class="pt-6 mt-6 prose border-t col-main border-slate-200">
      {{ audience | markdown | safe if audience }}
    </div> #}

    {# Innhold #}
    {% for chapter in chapters %}
      {% set chapterIndex = loop.index %}
      <section 
        class="grid grid-flow-row-dense mt-24 col-full grid-cols-center" 
        id="{{ chapter.data.title | slugify }}" 
        x-data="{ tocOpen: false }"
        x-intersect:enter.margin.-20%.0px.-60%.0px="showChapter{{ chapterIndex }} = true"
        x-intersect:leave.margin.-20%.0px.-60%.0px="showChapter{{ chapterIndex }} = false"
      >
        <div class="col-main">
          <h2 class="mt-8 mb-3 font-bold text-xl/tight text-balance ">{{ chapter.data.title }}</h2>

          {% if chapter.templateContent and chapter.templateContent | tocData | length > 0 %}
            <nav class="px-5 py-3 rounded-lg bg-slate-100">
              <h3 class="font-semibold">I dette kapittelet</h3>
              <ul class="grid gap-1">
                {% for item in chapter.templateContent | tocData %}
                <li>
                  <a class="flex gap-1 py-1 -mx-1 text-blue-500 underline group hover:text-blue-700 text-base/snug hover:decoration-2" href="#{{ item.id }}">
                    {{ '/src/_includes/svg/icons/arrow-right-angle-aksel.svg' | svgContents('translate-y-1 w-5 h-5') | safe }}
                    {{ item.text }}
                  </a>
                </li>
                {% endfor %}
              </ul>
            </nav>
          {% endif %}

          <div class="prose">
            {{ chapter.templateContent | markdown | safe }}
          </div>
        </div>
      </section>
    {% endfor %}

    <div class="pt-2 mt-12 text-sm italic border-t border-slate-200 col-main">{{ published | safe }}</div>
  </main>
{%- endblock -%}


{% block bodyscript %}
  <script>
    const headings = document.querySelectorAll('.prose h3');
    const headingsArr = Array.from(headings);

    const navItems = document.querySelectorAll('.toc--sticky li');

    function activateNavByIndex(index) {
      if (headings[index].classList.contains('active'))
        return;

      const currentActive = document.querySelectorAll('.toc--sticky .active');
      for (let i = currentActive.length - 1; i >= 0; i--) {
        currentActive[i].classList.remove('active');
      }
      navItems[index].classList.add('active');
    };

    const intersectionCallback = (entries, observer) => {
      if (entries[0].intesectionRatio <= 0)
          return;
      
      if (entries[0].intersectionRatio > 0.90) {    
        activateNavByIndex(headingsArr.indexOf(entries[0].target))
      }
    };

    const intersectionOptions = {
      threshold: 1,
      rootMargin: '15% 0px -60% 0px'
    };

    const intersectionObserver = new IntersectionObserver(intersectionCallback, intersectionOptions);

    for (let i = 0; i < headings.length; i++) {
      intersectionObserver.observe(headings[i]);  
    };

  </script>
{% endblock %}