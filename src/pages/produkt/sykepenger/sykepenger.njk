---
tags: ['produkt']
// title: 'Søknad om refusjon av reiseutgifter knyttet til ortopediske hjelpemidler, parykk, tilpasningskurs, folkehøyskole, grunnmønster eller brystprotese'
description: 'Innholdsfortegnelse med ingress. Kapittelnavigasjon med mulighet for å «bytteknapp» i bunnen. Hovedspalte på mobil  sticky sidespalte på desktop.'
permalink: 'produkt/sykepenger/index.html'
---
{%- extends 'base.njk' -%}

{%- from "macros/button.njk" import button -%}
{%- from "macros/microcard.njk" import microcard -%}
{%- from "macros/tile.njk" import tile -%}

{%- block content -%}

  {% set chapters = collections.all| onlyTags('sykepenger', 'innhold') | sort(false, false, 'data.order') %}

  <main class="grid py-page grid-left-1 lg:grid-cols-left-2" data-theme="sykepenger">
    <div class="col-main lg:col-wide">
      <div class="text-sm tracking-widest uppercase">{{ type | safe }}</div>
      <h1 class="mt-1 font-bold text-5xl/tight text-balance">{{ title | safe }}</h1>
      <p class="mt-6 text-lg text-pretty max-w-prose">{{ ingress | safe }}</p>

      {# Audience #}
      {% if audience %}       
      <div class="mt-6 -ml-1">
        <span class="inline-block px-3 py-2 text-sm leading-none rounded-full bg-slate-200 ">
          For {{ audience | lower | safe }}
        </span>
      </div>
      {% endif %}

    </div>

    {# Innholdsfortegnelse #}
    <div class="z-10 mt-12 rounded-lg isolate bg-slate-100">
      <h2 class="px-4 pt-3 text-base font-semibold">Innhold på siden</h2>
      <ul class="grid gap-3 py-2">
        {% for chapter in chapters.slice(0, -1) %}
        <li class="flex relative flex-col items-start gap-0.5 pt-1 pb-2">
          <a class="inline-flex items-center content-start gap-2 px-3 font-medium text-blue-500 group hover:text-blue-700 text-base/snug hover:underline after:absolute after:inset-0 after:z-10" href="#{{ chapter.data.title | slugify }}">
            {{ '/src/_includes/svg/icons/arrow-right-angle.svg' | svgContents('-translate-y-0.5 opacity-85') | safe }}
            {{ chapter.data.title }}
          </a>
          <p class="pl-11 text-pretty opacity-80">{{ chapter.data.ingress | safe }}</p>
        </li>
        {% endfor %}
      </ul>
    </div>


    {# Innhold #}
    {% for chapter in chapters %}
      {% set chapterIndex = loop.index %}
      <section class="grid grid-flow-row-dense pt-12 pb-12 col-full grid-left-1 lg:grid-cols-left-2" id="{{ chapter.data.title | slugify }}"  x-data="{ tocOpen: false }">
        <div class="col-wide">
          <div class="grid items-end pl-8 rounded-lg bg-slate-100 pt-2xl aspect-[2/1]">
            <span class="font-black -mb-9 text-white text-[20em]/[0.8]">{{ loop.index }}</span>
          </div>
          <h2 class="mt-8 font-bold text-4xl/snug text-balance">{{ chapter.data.title }}</h2>
          <p>{{ chapter.data.ingress | safe }}</p>
        </div>

        {# Chapter TOC #}
        {% if chapter.templateContent and chapter.templateContent | tocData | length > 0%}
        <nav class="relative mt-8 lg:col-side ">
          <h3 class="absolute inset-x-0 top-0 z-20 pt-3 pl-4 font-semibold rounded-t-lg bg-slate-100">I dette kapittelet</h3>
          <div class="lg:sticky lg:top-1">
            <div class="rounded-t-lg bg-slate-100 toc--sticky">
              <h3 class="px-4 pt-3 font-semibold">{{ chapter.data.title }}</h3>
              <ul class="grid gap-1 py-3">
              {% for item in chapter.templateContent | tocData %}
                <li class="toc-highlight">
                  <a class="flex items-center gap-1 px-2 py-2 text-blue-500 group hover:text-blue-700 text-base/snug hover:underline" href="#{{ item.id }}">
                    {{ '/src/_includes/svg/icons/arrow-right-angle.svg' | svgContents('-translate-y-px opacity-85') | safe }}
                    {{ item.text }}
                  </a>
                </li>
              {% endfor %}
              </ul>
            </div>
            <div class="relative grid mt-0.5" x-data="{ dropdownOpen: false }">
              <button class="flex items-center gap-1.5 px-3 py-2.5 bg-slate-100 hover:bg-slate-200 rounded-b-lg text-blue-500 hover:text-blue-700 group" x-on:click="dropdownOpen = !dropdownOpen" type="button" x-bind:aria-expanded="dropdownOpen">
                {{ '/src/_includes/svg/icons/chevron-down.svg' | svgContents('group-aria-expanded:rotate-180') | safe }}
                <span>Velg kapittel</span>
              </button>
              <ol class="absolute left-0 w-full border border-slate-300/5 max-w-md py-2 mt-0.5 rounded-lg shadow-xl top-full bg-slate-100" x-show="dropdownOpen" x-on:click.outside="dropdownOpen = false">
                {% for chapter in chapters %}
                <li class="border-t border-slate-200 first:border-t-0">
                  <a class="flex items-center gap-2 px-3 py-2 font-semibold hover:bg-white hover:text-blue-700 {{ 'text-slate-700' if loop.index === chapterIndex else 'text-blue-500' }}" href="#{{ chapter.data.title | slugify }}" x-on:click="dropdownOpen = false">
                    {{ '/src/_includes/svg/icons/dot.svg' | svgContents('text-blue-600' if loop.index === chapterIndex else 'text-transparent') | safe }}
                    {{ chapter.data.title }}
                  </a>
                </li>
                {% endfor %}
              </ol>
            </div>
          </div>
        </nav>

        {% endif %}

        {# Main Content #}
        <div class="mt-4 prose lg:mt-0 col-main">
          {{ chapter.templateContent | markdown | safe }}
        </div>
      </section>
    {% endfor %}

    <div class="pt-2 mt-12 text-sm italic border-t border-slate-200 col-main">{{ published | safe }}</div>
  </main>
{%- endblock -%}


{% block bodyscript %}
  <script>
    const headings = document.querySelectorAll('.prose h3');
    const headingsArr = Array.from(headings);

    const navItems = document.querySelectorAll('.toc--sticky .toc-highlight');

    function activateNavByIndex(index) {
      if (headings[index].classList.contains('toc-highlight--active'))
        return;

      const currentActive = document.querySelectorAll('.toc--sticky .toc-highlight--active');
      for (let i = currentActive.length - 1; i >= 0; i--) {
        currentActive[i].classList.remove('toc-highlight--active');
      }
      navItems[index].classList.add('toc-highlight--active');
    };

    const intersectionCallback = (entries, observer) => {
      if (entries[0].intesectionRatio <= 0)
          return;
      
      if (entries[0].intersectionRatio > 0.90) {    
        activateNavByIndex(headingsArr.indexOf(entries[0].target))
      }
    };

    const intersectionOptions = {
      threshold: 1,
      rootMargin: '15% 0px -60% 0px'
    };

    const intersectionObserver = new IntersectionObserver(intersectionCallback, intersectionOptions);

    for (let i = 0; i < headings.length; i++) {
      intersectionObserver.observe(headings[i]);  
    };

  </script>
{% endblock %}
