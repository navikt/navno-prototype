---
tags: ['produkt']
variant: 'E'
description: 'Enkel innholdsmeny uten ingresser. Kapittelmeny i hovedspalte p책 mobil og sidespalte (sticky) p책 desktop. Mulighet for 책 bytte kapittel er lagt i bunnen av hver kapittelmeny.'
permalink: 'produkt/pleiepenger/e/index.html'
---
{%- extends 'base.njk' -%}

{%- from "macros/button.njk" import button -%}
{%- from "macros/microcard.njk" import microcard -%}
{%- from "macros/tile.njk" import tile -%}

{%- block content -%}

  {% set chapters = collections.all| onlyTags('pleiepenger', 'innhold') | sort(false, false, 'data.order') %}

  <main class="grid py-16 grid-cols-mini lg:grid-cols-maxi">
    <div class="col-main lg:col-wide">
      <div class="text-sm tracking-widest uppercase">{{ type | safe }}</div>
      <h1 class="mt-1 -translate-x-[0.0625em] font-bold text-4xl/tight text-balance">{{ title | safe }}</h1>
      <div class="mt-8 text-lg text-pretty max-w-prose">{{ ingress | markdown | safe }}</div>

      {# Audience #}
      <div class="mt-6 -ml-1">
        <span class="inline-block px-3 py-2 text-sm leading-none rounded-full bg-slate-200 ">
          {{ 'For ' if audience }}{{ audience | lower | safe }}
        </span>
      </div>
    </div>

    {# Innholdsfortegnelse #}
    <div class="z-10 mt-12 isolate">
      <h2 class="text-base font-semibold">Innhold p책 siden</h2>
      <ul class="grid gap-3 mt-2">
        {% for chapter in chapters.slice(0, -1) %}
        <li class="relative">
          <span class="sm:absolute mr-1 sm:mr-2.5 leading-none sm:translate-y-1.5 right-full" aria-hidden="true">{{ loop.index }}.</span>
          <a class="inline-flex items-end gap-3 p-1 -m-1 text-blue-500 underline hover:text-blue-700 text-base/snug hover:no-underline" href="#{{ chapter.data.title | slugify }}">
            {{ chapter.data.title }}
          </a>
        </li>
        {% endfor %}
      </ul>
    </div>


    {# Innhold #}

    {% for chapter in chapters %}
      {% set chapterIndex = loop.index %}
      <section class="grid pt-12 col-full grid-cols-mini lg:grid-cols-maxi" id="{{ chapter.data.title | slugify }}"  x-data="{ tocOpen: false }">
        <div class=" col-main lg:col-wide">
          <div class="grid items-end pl-8 rounded-lg bg-slate-100 pt-2xl aspect-[2/1]">
            <span class="font-black -mb-9 text-white text-[20em]/[0.8]">{{ loop.index }}</span>
          </div>
          <h2 class="mt-8 font-bold text-3xl/snug text-balance">{{ chapter.data.title }}</h2>
        </div>

        {# Chapter TOC #}
        {% if chapter.templateContent %}
        <nav class="relative mb-8 lg:order-1 lg:col-side">
          <h3 class="absolute inset-x-0 top-0 z-20 py-2 font-semibold bg-white">I dette kapittelet</h3>
          <div class="z-10 lg:sticky lg:top-3">
            <h3 class="py-2 font-semibold">{{ chapter.data.title }}</h3>
            <div class="pb-2 toc toc--b toc--sticky">
            {{ chapter.templateContent | toc | safe }}
            </div>
            <div class="relative" x-data="{ dropdownOpen: false }">
              <button class="flex items-center gap-1 px-4 py-3 -mx-4 font-semibold text-blue-500 hover:text-blue-600 group" x-on:click="dropdownOpen = !dropdownOpen" type="button" x-bind:aria-expanded="dropdownOpen">
                <span>Bytt kapittel</span>
                {{ '/src/_includes/svg/icons/chevron-down.svg' | svgContents('w-5 h-5 -translate-x-1 group-aria-expanded:rotate-180') | safe }}
              </button>
              <ol class="absolute w-full max-w-md gap-1 px-2 py-1.5 divide-y rounded-lg shadow-lg divide-slate-300 -left-4 top-full bg-slate-100" x-show="dropdownOpen" x-on:click.outside="dropdownOpen = false">
                {% for chapter in chapters.slice(0, -1) %}
                <li class="py-1">
                  {% if loop.index === chapterIndex %}
                  <span class="flex items-center gap-3 px-3 pt-1.5 pb-1 font-semibold">
                    {{ chapter.data.title }}
                    <span class="w-2 h-2 rounded-full bg-slate-500" aria-hidden="true"></span>
                  </span>
                  {% else %}
                  <a class="flex items-center gap-3 px-3 pt-1.5 pb-1 font-semibold text-blue-500 hover:rounded hover:underline hover:bg-blue-100" href="#{{ chapter.data.title | slugify }}" x-on:click="dropdownOpen = false">
                    {{ chapter.data.title }}
                  </a>
                  {% endif %}
                </li>
                {% endfor %}
              </ol>
            </div>
          </div>
        </nav>
        {% endif %}

        {# Main Content #}
        <div class="mt-2 prose col-main">
          <p>{{ chapter.data.ingress | safe }}</p>

          {{ chapter.templateContent | markdown | safe }}
        </div>
      </section>
    {% endfor %}

    <div class="pt-2 mt-12 text-sm italic border-t border-slate-200 col-main">{{ published | safe }}</div>
  </main>
{%- endblock -%}


{% block bodyscript %}
  <script>
    const headings = document.querySelectorAll('.prose h3');
    const headingsArr = Array.from(headings);

    const navItems = document.querySelectorAll('.toc--sticky li');

    function activateNavByIndex(index) {
      if (headings[index].classList.contains('active'))
        return;

      const currentActive = document.querySelectorAll('.toc--sticky .active');
      for (let i = currentActive.length - 1; i >= 0; i--) {
        currentActive[i].classList.remove('active');
      }
      navItems[index].classList.add('active');
    };

    const intersectionCallback = (entries, observer) => {
      if (entries[0].intesectionRatio <= 0)
          return;
      
      if (entries[0].intersectionRatio > 0.90) {    
        activateNavByIndex(headingsArr.indexOf(entries[0].target))
      }
    };

    const intersectionOptions = {
      threshold: 1,
      rootMargin: '10% 0px -70% 0px'
    };

    const intersectionObserver = new IntersectionObserver(intersectionCallback, intersectionOptions);

    for (let i = 0; i < headings.length; i++) {
      intersectionObserver.observe(headings[i]);  
    };

  </script>
{% endblock %}