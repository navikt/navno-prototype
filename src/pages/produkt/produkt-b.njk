---
tags: ['produkt']
title: 'Pleiepenger for sykt barn'
// title: 'Tilskudd til kjøp av PC eller nettbrett ved lese- og skrivevansker'
type: 'Pengestøtte'
variant: 'B'
audience: 'Arbeidsgiver'
intro: 'Sikrer deg inntekt under fravær fra jobb når du må pleie og ta vare på et barn som har vært innlagt eller er til behandling på sykehus.'
published: 'Oppdatert 18. desember 2023'
order: 4
alpine: true
permalink: 'produkt/b/index.html'
---
{%- extends 'base.njk' -%}

{%- from "macros/button.njk" import button -%}
{%- from "macros/microcard.njk" import microcard -%}
{%- from "macros/tile.njk" import tile -%}

{%- block content -%}

  <main class="grid py-16 grid-cols-mini lg:grid-cols-maxi">
    <div class="col-main lg:col-wide">
      <div class="text-sm tracking-widest uppercase">{{ type | safe }}</div>
      <h1 class="mt-2 font-bold text-4xl/tight text-balance">{{ title | safe }}</h1>

      {# Audience #}
      <div class="mt-6 -ml-1">
        <span class="inline-block px-3 py-2 text-sm leading-none rounded-full bg-slate-200 ">
          {{ 'For ' if audience }}{{ audience | lower | safe }}
        </span>
      </div>

      {# Intro #}
      <div class="mt-8 text-lg text-pretty max-w-prose">{{ intro | markdown | safe }}</div>
    </div>

    {# Innholdsfortegnelse #}
    <div class="z-10 mt-12 isolate">
      <h2 class="text-base font-semibold">Innhold på siden</h2>
      <ul class="grid gap-6 mt-5">
        {% for chapter in collections.kapittel %}
        <li class="relative">
          <a class="flex items-end gap-3 p-1 -m-1 font-semibold text-base/snug group" href="#{{ chapter.data.title | slugify }}">
            <span class="text-blue-500 underline group-hover:no-underline group-hover:text-blue-700">{{ chapter.data.title }}</span>
            <span class="flex-1 h-px min-w-4 -translate-y-[0.25em] bg-dotted-x" aria-hidden="true"></span>
            <span class="grid w-[1.625em] col-start-3 leading-none text-center transition-colors duration-300 rounded-full place-items-center group-hover:bg-blue-500 group-hover:text-white aspect-square bg-slate-100" aria-hidden="true">{{ loop.index }}</span>
          </a>
          <p class="pr-4 mt-1.5 text-pretty opacity-85">{{ chapter.data.description | safe }}</p>
        </li>
        {% endfor %}
      </ul>
    </div>


    {# Innhold #}
    {% set chapters = collections.kapittel %}

    {% for chapter in chapters %}
      {% set chapterIndex = loop.index %}
      <section class="grid items-start pt-12 col-full grid-cols-mini lg:grid-cols-maxi" id="{{ chapter.data.title | slugify }}"  x-data="{ tocOpen: false }">
        <div class=" col-main lg:col-wide">
          <div class="grid items-end pl-8 rounded-lg bg-slate-100 pt-2xl aspect-[2/1]">
            <span class="font-black -mb-9 text-white text-[20em]/[0.8]">{{ loop.index }}</span>
          </div>
          <h2 class="mt-8 font-bold text-3xl/snug text-balance">{{ chapter.data.title }}</h2>
        </div>

        {# Chapter TOC #}
        {% if chapter.templateContent %}
        <nav class="lg:sticky lg:order-1 toc toc--b toc--sticky lg:col-side lg:top-6">
          <h3 class="py-2 font-semibold">I dette kapittelet</h3>
          {{ chapter.templateContent | toc | safe }}
        </nav>
        {% endif %}

        {# Main Content #}
        <div class="mt-2 prose col-main">
          <p>{{ chapter.data.description | safe }}</p>

          {{ chapter.templateContent | markdown | safe }}
        </div>
      </section>
    {% endfor %}

    <div class="pt-2 mt-12 text-sm italic border-t border-slate-200 col-main">{{ published | safe }}</div>
  </main>
{%- endblock -%}


{% block bodyscript %}
  <script>
    const headings = document.querySelectorAll('.prose h3');
    const headingsArr = Array.from(headings);

    const navItems = document.querySelectorAll('.toc--sticky li');

    function activateNavByIndex(index) {
      if (headings[index].classList.contains('active'))
        return;

      const currentActive = document.querySelectorAll('.toc--sticky .active');
      for (let i = currentActive.length - 1; i >= 0; i--) {
        currentActive[i].classList.remove('active');
      }
      navItems[index].classList.add('active');
    };

    const intersectionCallback = (entries, observer) => {
      if (entries[0].intesectionRatio <= 0)
          return;
      
      if (entries[0].intersectionRatio > 0.90) {    
        activateNavByIndex(headingsArr.indexOf(entries[0].target))
      }
    };

    const intersectionOptions = {
      threshold: 1,
      rootMargin: '5% 0px -65% 0px'
    };

    const intersectionObserver = new IntersectionObserver(intersectionCallback, intersectionOptions);

    for (let i = 0; i < headings.length; i++) {
      intersectionObserver.observe(headings[i]);  
    };

  </script>
{% endblock %}